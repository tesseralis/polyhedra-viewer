{"version":3,"sources":["specs/common.ts","styles/media.ts","styles/scales.ts","styles/useStyle.ts","specs/Classical.ts","specs/symmetry.ts","specs/getSymmetry.ts","specs/getName.ts","specs/getConwaySymbol.ts","specs/PolyhedronSpecs.ts","specs/Capstone.ts","specs/Queries.ts","specs/Composite.ts","utils.ts","components/common/SrOnly.tsx","components/common/ExternalLink.tsx","components/common/usePageTitle.ts","components/common/createHookedContext.tsx","components/common/wrapProviders.tsx","data/common.ts","specs/Elementary.ts","specs/getSpecs.ts","components/configOptions.ts","bimap.ts","data/alternates.ts","styles/fonts.ts","components/ConfigCtx.ts","components/useMediaInfo.tsx","data/names sync /^/.//.*/.json$","data/polyhedra sync /^/.//.*/.json$","registerServiceWorker.ts","components/Loading.tsx","components/App.tsx","components/usePageTracker.ts","components/Root.tsx","index.tsx"],"names":["polygonNames","BiMap","polygonPrefixes","primaryPolygons","polygons","polygonTypes","twists","oppositeTwist","twist","mobileMaxWidth","mobilePortraitMaxWidth","tabletMaxWidth","desktopMinWidth","tabletPortrait","mobile","mobileLandscape","mobilePortrait","notMobile","desktop","font","Object","freeze","1","2","3","4","5","6","7","spacing","size","8","useStyle","styles","deps","useMemo","rule","StyleSheet","create","prop","css","families","facets","oppositeFacet","facet","operations","Classical","data","cleanData","isTetrahedral","family","isOctahedral","isIcosahedral","isRegular","operation","isTruncated","isRectified","isBevelled","isCantellated","isSnub","hasFacet","isFace","isVertex","isChiral","query","withData","this","Error","name","includes","where","s","Specs","Queries","getAll","Symmetry","meta","n","achiralSub","chiral","sub","base","group","symbol","rotationalOrder","polyhedralOrders","groupNames","Polyhedral","toUpperCase","Cyclic","prefix","get","bilateral","biradial","Dihedral","reflection","elementaryMapping","sphenocorona","sphenomegacorona","hebesphenomegacorona","disphenocingulum","bilunabirotunda","getSymmetry","solid","isClassical","isCapstone","capstone","isPrismatic","baseSides","prismaticType","isMono","isGyroelongated","isPrimary","isCupolaRotunda","isGyro","getCapstoneSymmetry","isComposite","composite","augmented","gyrate","diminished","source","align","count","pure","symmetry","basePolygon","getCompositeSymmetry","isElementary","type","countPrefixes","countString","wordJoin","array","compact","join","rest","rectifiedNames","regularNames","getName","replace","getExpandedString","elongation","baseStr","capType","prism","antiprism","none","snub","johnsonSolids","getPolyhedraNames","operationMapping","regular","truncate","rectify","bevel","cantellate","familyMapping","PolyhedronSpecs","getCanonicalName","getAlternateNames","canonicalName","structure","index","indexOf","getConwaySymbol","capitalize","s2","isEqual","prismaticTypes","elongations","counts","gyrations","rotundaCounts","range","Capstone","isDigonal","isTriangular","isSquare","isPentagonal","isSecondary","isBi","isShortened","isElongated","isOrtho","isPrism","isAntiprism","isPyramid","isCupola","rotundaCount","isRotunda","hasGyrate","entries","nameMapping","canonicalNameMapping","Map","entry","set","has","pickBy","undefined","getSingle","filter","item","isMatch","alignments","prismaticBases","augmentedClassicalBases","icosahedron","withName","rhombicosidodecahedron","limitCount","limit","Composite","totalCount","isTri","isAugmented","isDiminished","isGyrate","isPara","isMeta","isAugmentedPrism","isAugmentedClassical","hasAlignment","isAugmentedSolid","triangular","isDiminishedSolid","isGyrateSolid","modifyLimit","getWithAlignments","cartesian","mod","MathUtils","euclideanModulo","getCyclic","length","repeat","value","Array","fill","mapObject","arr","iteratee","fromEntries","map","flatMapUniq","iteratee1","iteratee2","uniqBy","flatMap","find","iter","predicate","JSON","stringify","choose","choices","Math","floor","random","splitAt","list","slice","escape","str","itemLists","keys","key","items","remainingLists","f","SrOnly","children","height","width","position","overflow","clip","ExternalLink","href","props","target","rel","usePageTitle","title","useEffect","document","createHookedContext","actions","defaultStateCreator","defaultState","isFunction","StateContext","React","createContext","ActionContext","Provider","useReducer","state","action","dispatch","actionsValue","mapValues","useState","useContext","useActions","wrapProviders","providers","reduceRight","wrapped","provider","wrapProvider","groupName","require","allSolidNames","isValidSolid","solidName","assertValidSolid","getSolidData","escapedName","bases","Elementary","subclasses","getCanonicalSpecs","Subclass","hasCanonicalName","withCanonicalName","getSpecs","hasName","defaultColors","10","colorOptionsList","display","startCase","default","configInputs","min","max","step","options","input","defaultConfig","reduce","obj","option","_entries","k","val","values","getCanonicalMapping","alternateNamesMapping","tetrahedron","cube","octahedron","cuboctahedron","rhombicuboctahedron","icosidodecahedron","gyrobifastigium","canonical","alts","alt","canonicalMapping","alternateNames","isAlternateName","times","andaleMono","verdana","setValue","cloneDeep","reset","getWindowWidth","window","innerWidth","screen","DeviceContext","media","DeviceProvider","setWidth","handleResize","addEventListener","removeEventListener","getOrientation","useMediaInfo","isMobile","device","orientation","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","code","resolve","module","exports","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","Loading","justifyContent","alignContent","alignItems","gridAutoFlow","gridGap","scales","text","fontFamily","fonts","fontSize","path","mdiHexagonOutline","spin","HomePage","lazy","ViewerPage","App","useLocation","pathname","search","ReactGA","pageview","usePageTracker","fallback","element","Providers","BrowserRouter","ConfigCtx","Root","initialize","root","getElementById","ReactDOM","render","URL","process","origin","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"2HACA,0PAEaA,EAAe,IAAIC,IAAM,CACpC,CAAC,EAAG,YACJ,CAAC,EAAG,UACJ,CAAC,EAAG,YACJ,CAAC,EAAG,WACJ,CAAC,EAAG,WACJ,CAAC,GAAI,aAGMC,EAAkB,IAAID,IAAM,CACvC,CAAC,EAAG,aACJ,CAAC,EAAG,WACJ,CAAC,EAAG,cACJ,CAAC,EAAG,UACJ,CAAC,EAAG,cACJ,CAAC,EAAG,aACJ,CAAC,EAAG,aACJ,CAAC,GAAI,eAGME,EAAkB,CAAC,EAAG,EAAG,GAMzBC,EAAQ,UAAOD,EAHK,CAAC,EAAG,EAAG,KAM3BE,EAAe,CAAC,UAAW,aAK3BC,EAAkB,CAAC,OAAQ,SACjC,SAASC,EAAcC,GAC5B,MAAiB,SAAVA,EAAmB,QAAU,S,gxBCrC/B,IAAMC,EAAiB,IACjBC,EAAyB,IACzBC,EAAiB,KACjBC,EAAkBD,EAAiB,EAEnCE,EAAc,6BACzBJ,EAAiB,EADQ,+BAEJE,EAFI,OAGdG,EAAM,6BAAyBL,EAAzB,OACNM,EAAe,6BAC1BL,EAAyB,EADC,+BAELD,EAFK,OAGfO,EAAc,6BAAyBN,EAAzB,OACdO,EAAS,6BAAyBR,EAAiB,EAA1C,OACTS,EAAO,6BAAyBN,EAAzB,O,SCGPO,EAAmCC,OAAOC,OAAO,CAC5DC,EAAG,OACHC,EAAG,UACHC,EAAG,SACHC,EAAG,UACHC,EAAG,OACHC,EAAG,WACHC,EAAG,YAgBQC,EAAsCT,OAAOC,OAAO,CAC/DC,EAAG,UACHC,EAAG,SACHC,EAAG,OACHC,EAAG,OACHC,EAAG,OACHC,EAAG,OACHC,EAAG,UAiBQE,EAAuCV,OAAOC,OAAO,CAChEC,EAAG,OACHC,EAAG,OACHC,EAAG,OACHC,EAAG,OACHC,EAAG,QACHC,EAAG,QACHC,EAAG,QACHG,EAAG,U,uBClCU,SAASC,EAASC,GAA8C,IAAvBC,EAAsB,uDAAJ,GACxE,OAAOC,mBAAQ,WACb,IAAMC,EAAOC,aAAWC,OAAO,CAAEL,WACjC,OAAO,eAACM,EAAD,uDAAQ,YAAR,MAAyB,CAC9B,CAACA,GAAOC,cAAIJ,EAAKH,YAHP,CAMVA,GANU,mBAMCC,O,iSC1CJO,EAAWtC,IAGXuC,EAAS,CAAC,OAAQ,UAExB,SAASC,EAAcC,GAC5B,MAAiB,SAAVA,EAAmB,SAAW,OAGhC,IAAMC,EAAa,CACxB,UACA,WACA,UACA,QACA,aACA,QAcmBC,E,kDACnB,WAAoBC,GAAsB,IAAD,8BACvC,cAAM,YAAaD,EAAUE,UAAUD,KAazCE,cAAgB,kBAA2B,IAArB,EAAKF,KAAKG,QAdS,EAezCC,aAAe,kBAA2B,IAArB,EAAKJ,KAAKG,QAfU,EAgBzCE,cAAgB,kBAA2B,IAArB,EAAKL,KAAKG,QAhBS,EAkBzCG,UAAY,iBAA8B,YAAxB,EAAKN,KAAKO,WAlBa,EAmBzCC,YAAc,iBAA8B,aAAxB,EAAKR,KAAKO,WAnBW,EAoBzCE,YAAc,iBAA8B,YAAxB,EAAKT,KAAKO,WApBW,EAqBzCG,WAAa,iBAA8B,UAAxB,EAAKV,KAAKO,WArBY,EAsBzCI,cAAgB,iBAA8B,eAAxB,EAAKX,KAAKO,WAtBS,EAuBzCK,OAAS,iBAA8B,SAAxB,EAAKZ,KAAKO,WAvBgB,EAyBzCM,SAAW,kBAAMd,EAAUc,SAAS,EAAKb,KAAKO,YAzBL,EA+BzCO,OAAS,iBAA0B,SAApB,EAAKd,KAAKH,OA/BgB,EAgCzCkB,SAAW,iBAA0B,WAApB,EAAKf,KAAKH,OAhCc,EAkCzCmB,SAAW,kBAAM,EAAKJ,UAlCmB,E,qDAIhCZ,GACP,OAAOD,EAAUkB,MAAMC,SACrBnB,EAAUE,UAAV,2BAAyBkB,KAAKnB,MAASA,O,oCAI7BO,EAAsB9C,GAClC,OAAO0D,KAAKD,SAAS,CAAEX,YAAW9C,Y,8BAgBlC,IAAK0D,KAAKnB,KAAKH,MAAO,MAAM,IAAIuB,MAAJ,eAAkBD,KAAKE,OAAvB,kBAC5B,OAAOF,KAAKnB,KAAKH,S,gCAQHU,GACd,MAAO,CAAC,UAAW,YAAYe,SAASf,K,gCAGjBP,GAWvB,OAVKmB,KAAKN,SAASb,EAAKO,mBACfP,EAAKH,MAES,SAAnBG,EAAKO,kBACAP,EAAKvC,MAGS,SAAnBuC,EAAKO,WAAyBP,EAAKvC,QACrCuC,EAAKvC,MAAQ,QAERuC,I,sJAIiBF,G,yDAAbS,E,sBACYb,G,4DAAVS,E,SACLgB,KAAKN,SAASN,G,+BACIZ,G,2DAClB,OADSE,E,kBACH,IAAIE,EAAU,CAAEI,SAAQI,YAAWV,U,4KAEpB,SAAdU,E,+BACWhD,K,2DAClB,OADSE,E,kBACH,IAAIsC,EAAU,CAAEI,SAAQI,YAAW9C,U,yKAG3C,O,UAAM,IAAIsC,EAAU,CAAEI,SAAQI,c,8ZAQdA,GACtB,OAAOY,KAAKF,MAAMM,OAAM,SAACC,GAAD,OAAOA,EAAExB,KAAKO,YAAcA,S,GA5EjBkB,KAAlB1B,EAyEZkB,MAAQ,IAAIS,IAAQ3B,EAAU4B,W,2HCtFjBC,EAAtB,WAGE,WAAYC,GAAiB,yBAF7BA,UAE4B,EAC1BV,KAAKU,KAAOA,EAJhB,qDAeY,IAAD,EAC2BV,KAAKU,KAA/BC,EADD,EACCA,EAAGC,EADJ,EACIA,WAAYC,EADhB,EACgBA,OACjBC,EAAG,iBAAMH,QAAN,IAAMA,IAAK,IAAX,OAAgBE,EAAS,GAAKD,GACvC,MAAO,CAAEG,KAAMf,KAAKU,KAAKM,MAAOF,SAlBpC,kCAwBe,IAAD,EACYd,KAAKiB,SAAnBF,EADE,EACFA,KAAMD,EADJ,EACIA,IACd,OAAKA,EACC,GAAN,OAAUC,EAAV,YAAkBD,GADDC,IA1BrB,8BAkCI,OAAOf,KAAKU,KAAKQ,iBAAmBlB,KAAKU,KAAKG,OAAS,EAAI,OAlC/D,KAwCMM,EAAmB,CACvB7D,EAAG,GACHC,EAAG,GACHC,EAAG,IAGC4D,EAAa,CACjB9D,EAAG,cACHC,EAAG,aACHC,EAAG,eAQQ6D,EAAb,kDAEE,WAAYxC,GAAuB,IAAD,0BACxBG,EAAmBH,EAAnBG,OAAQ6B,EAAWhC,EAAXgC,OADgB,OAEhC,cAAM,CACJG,MAAOI,EAAWpC,GAAQ,GAAGsC,cAC7BV,WAAuB,IAAX5B,EAAe,IAAM,IACjC6B,SAAUA,EACVK,gBAAiBC,EAAiBnC,MAP9BH,UAC0B,EAQhC,EAAKA,KAAOA,EARoB,EAFpC,mDAaU,IAAD,EACsBmB,KAAKnB,KAAxBG,EADH,EACGA,OAAQ6B,EADX,EACWA,OAChB,MAAM,GAAN,OAAUA,EAAS,SAAW,OAA9B,YAAwCO,EAAWpC,OAfvD,2BAkBaA,EAAgB6B,GACzB,OAAO,IAAIQ,EAAW,CAAErC,SAAQ6B,eAnBpC,GAAgCJ,GA4BnBc,EAAb,kDAEE,WAAY1C,GAAmB,IAAD,0BACpBgC,EAAchC,EAAdgC,OAAQF,EAAM9B,EAAN8B,EADY,OAE5B,cAAM,CACJK,MAAO,IACPL,IACAC,WAAY,IACZC,SAAUA,EACVK,gBAAiBP,KARb9B,UACsB,EAS5B,EAAKA,KAAOA,EATgB,EAFhC,mDAcU,IAAD,EACiBmB,KAAKnB,KAAnB8B,EADH,EACGA,EAAGE,EADN,EACMA,OACX,GAAU,IAANF,IAAYE,EAAQ,MAAO,YAC/B,GAAU,IAANF,IAAYE,EAAQ,MAAO,WAC/B,IAAMW,EAASxF,IAAgByF,IAAId,GACnC,OAAOE,EAASW,EAAH,UAAeA,EAAf,iBAnBjB,2BAsBab,EAAeE,GACxB,OAAO,IAAIU,EAAO,CAAEZ,IAAGE,eAvB3B,GAA4BJ,GAAfc,EA0BJG,UAAYH,EAAOE,IAAI,GA1BnBF,EA4BJI,SAAWJ,EAAOE,IAAI,GAQxB,IAAMG,EAAb,kDAEE,WAAY/C,GAAqB,IAAD,0BACtBgD,EAAkBhD,EAAlBgD,WAAYlB,EAAM9B,EAAN8B,EADU,OAE9B,cAAM,CACJK,MAAO,IACPL,IACAC,WAA2B,UAAfiB,EAAyB,IAAM,IAC3ChB,QAASgB,EACTX,gBAAqB,EAAJP,KARb9B,UACwB,EAS9B,EAAKA,KAAOA,EATkB,EAFlC,mDAcU,IAAD,EACqBmB,KAAKnB,KAAvB8B,EADH,EACGA,EAAGkB,EADN,EACMA,WACLd,EAAOc,EAAU,UAAMA,EAAN,QAAyB,WAChD,MAAM,GAAN,OAAU7F,IAAgByF,IAAId,GAA9B,YAAoCI,MAjBxC,2BAoBaJ,EAAekB,GACxB,OAAO,IAAID,EAAS,CAAEjB,IAAGkB,mBArB7B,GAA8BpB,GCzIxBqB,EAAoB,CACxBC,aAAcR,EAAOI,SACrB,yBAA0BJ,EAAOG,UACjCM,iBAAkBT,EAAOI,SACzBM,qBAAsBV,EAAOI,SAC7BO,iBAAkBN,EAASH,IAAI,EAAG,aAClCU,gBAAiBP,EAASH,IAAI,EAAG,SACjC,+BAAgCF,EAAOE,IAAI,IA4F9B,SAASW,EAAYC,GAClC,GAAIA,EAAMC,cACR,OAAOjB,EAAWI,IAAIY,EAAMxD,KAAKG,OAAQqD,EAAM5C,UAEjD,GAAI4C,EAAME,aACR,OA9FJ,SAA6BC,GAAqB,IACxCzB,EAASyB,EAAS3D,KAAlBkC,KAGR,GAAIyB,EAASC,cACX,OAAOb,EAASH,IAAIe,EAASE,YAAaF,EAASG,iBAGrD,GAAIH,EAAS/C,SACX,OAAOmC,EAASH,IAAIV,EAAM,aAI5B,GAAIyB,EAASI,SACX,OAAOrB,EAAOE,IAAIV,GAEpB,IAAM8B,EAAkBL,EAASK,kBAEjC,OAAIL,EAASM,YACJlB,EAASH,IAAIV,EAAM8B,EAAkB,YAAc,SAGxDL,EAASO,kBACJxB,EAAOE,IAAIV,IAAQ8B,GAGxBA,EAEKjB,EAASH,IAAIV,GAEfa,EAASH,IAAIV,EAAMyB,EAASQ,SAAW,YAAc,SAgEnDC,CAAoBZ,GAE7B,GAAIA,EAAMa,cACR,OAhEJ,SAA8BC,GAAuB,IAAD,EACOA,EAAUtE,KAA3DuE,EAD0C,EAC1CA,UAAWC,EAD+B,EAC/BA,OAAQC,EADuB,EACvBA,WAAYC,EADW,EACXA,OAAQC,EADG,EACHA,MACzCC,EAAQL,EAAYC,EAASC,EAE7BI,EAAOD,IAAUL,GAAaK,IAAUH,GAAcG,IAAUJ,EACtE,OAAQI,GACN,KAAK,EACH,OAAOF,EAAOI,WAEhB,KAAK,EAGH,OAAOJ,EAAOhB,aACVhB,EAAOI,SACPJ,EAAOE,IAAI8B,EAAO1E,KAAKG,QAE7B,KAAK,EACH,GAAIuE,EAAOhB,aAGT,MAAiB,SAAViB,EAAmB5B,EAASH,IAAI,EAAG,SAAWF,EAAOI,SAG9D,IAAMiC,EAAcL,EAAO1E,KAAKG,OAEhC,OAAoB,IAAhB4E,EACKhC,EAASH,IAAI,EAAG,SAGX,SAAV+B,EACKE,EACH9B,EAASH,IAAImC,EAAa,aAC1BrC,EAAOE,IAAImC,GAERF,EAAOnC,EAAOI,SAAWJ,EAAOG,UAI3C,KAAK,EAEH,OAAI6B,EAAOhB,aACFX,EAASH,IAAI,EAAG,SAKlBiC,EAAOnC,EAAOE,IAAI,GAAKF,EAAOG,UAEvC,KAAK,EAEH,OAAOH,EAAOE,IAAI,GAGtB,MAAM,IAAIxB,MAAM,iDAWP4D,CAAqBxB,GAE9B,GAAIA,EAAMyB,eACR,OAAOhC,EAAkBO,EAAMxD,KAAKkC,MAEtC,MAAM,IAAId,MAAJ,mCAAsCoC,EAAM0B,O,aCjH9CC,EAAwC,CAAE5G,EAAG,GAAIC,EAAG,KAAMC,EAAG,OAE5D,SAAS2G,EAAYR,EAAe1C,GACzC,OAAc,IAAV0C,EAAoB,GAClB,GAAN,OAAUO,EAAcP,IAAxB,OAAiC1C,GAG5B,SAASmD,IAA4C,IAAD,uBAA/BC,EAA+B,yBAA/BA,EAA+B,gBACzD,OAAOC,YAAQD,GAAOE,KAAK,KAGtB,SAAS7C,IAA2C,IAApCA,EAAmC,uDAAlB,GAAI8C,EAAc,uCACxD,MAAM,GAAN,OAAU9C,GAAV,OAAmB8C,GAGrB,IAAMC,EAAiB,CACrBjH,EAAG,mBACHC,EAAG,gBACHC,EAAG,qBAGCgH,EAGF,CACFlH,EAAG,SAACoB,GAAD,MAAsB,SAAVA,EAAmB,cAAgB,oBAClDnB,EAAG,SAACmB,GAAD,MAAsB,SAAVA,EAAmB,OAAS,cAC3ClB,EAAG,SAACkB,GAAD,MAAsB,SAAVA,EAAmB,eAAiB,gBAQtC,SAAS+F,EAAQpC,GAC9B,GAAIA,EAAMC,cAAe,CAAC,IAAD,EACcD,EAAMxD,KAAnCO,EADe,EACfA,UAAWJ,EADI,EACJA,OAAQN,EADJ,EACIA,MACrBqC,EAAOsB,EAAM3C,WACf8E,EAAaxF,GAAQN,GACrB6F,EAAevF,GACnB,OAAOkF,EACS,SAAd9E,EAAuBA,EAAY,GACnC,CAAC,WAAY,SAASe,SAASf,GAAa,YAAc,GAbhE,SAA2B2B,EAAc3B,GAEvC,OADYoC,EAAqB,eAAdpC,EAA6B,SAAW,GAAI2B,GACpD2D,QAAQ,KAAM,KAYrBC,CAAkB5D,EAAM3B,IAI5B,GAAIiD,EAAME,aAAc,CAAC,IAAD,EACsBF,EAAMxD,KAA1CkC,EADc,EACdA,KAAM6D,EADQ,EACRA,WAAYnB,EADJ,EACIA,MAAOJ,EADX,EACWA,OAEjC,GAAIhB,EAAMI,cACR,OAAOyB,EACLlI,IAAgByF,IAAIY,EAAMK,aAC1BL,EAAMM,iBAIV,GAAIN,EAAM5C,SACR,OAAOyE,EAAS,OAAQlI,IAAgByF,IAAIV,GAAO,aAGrD,IAOM8D,EAAUxC,EAAMU,kBAClB,gBACAkB,EAAYR,EAAOpB,EAAMyC,WAE7B,OAAOZ,EAXU,CACfa,MAAO,YACPC,UAAW,gBACXC,KAAM,GACNC,KAAM,IAQGN,GACT5I,IAAgByF,IAAIV,GACpBS,EAAO6B,EAAQwB,IAInB,GAAIxC,EAAMa,cAAe,CAAC,IAAD,EACkCb,EAAMxD,KAAvDuE,EADe,EACfA,UAAWC,EADI,EACJA,OAAQC,EADJ,EACIA,WAAYE,EADhB,EACgBA,MAAOD,EADvB,EACuBA,OAC9C,OAAO/B,EACLgC,EACAU,EACED,EAAYb,EAAW,aACvBa,EAAYZ,EAAQ,UACpBY,EAAYX,EAAY,cACxBC,EAAOrD,SAKb,GAAImC,EAAMyB,eACR,OAAOzB,EAAMxD,KAAKkC,KAGpB,MAAM,IAAId,MAAJ,gCAAmCoC,EAAM0B,O,YCnG3CoB,EAAgBC,YAAkB,WAElCC,EAAmB,CACvBC,QAAS,GACTC,SAAU,IACVC,QAAS,IACTC,MAAO,IACPC,WAAY,IACZR,KAAM,KAGFS,EAAgB,CACpBrI,EAAG,iBAAM,KACTC,EAAG,SAACmB,GAAD,MAA2B,WAAVA,EAAqB,IAAM,KAC/ClB,EAAG,SAACkB,GAAD,MAA2B,WAAVA,EAAqB,IAAM,M,YCEnBkH,E,WAI5B,WAAY7B,EAAsBlF,GAAa,yBAH/CkF,UAG8C,OAF9ClF,UAE8C,EAC5CmB,KAAK+D,KAAOA,EACZ/D,KAAKnB,KAAOA,E,mDAIZ,OAAO4F,EAAQzE,Q,sCAIf,OAAO6F,YAAiB7F,KAAKE,U,uCAI7B,OAAO4F,YAAkB9F,KAAK+F,mB,iCAI9B,OAAO3D,EAAYpC,Q,qCAInB,ODzBW,SAAyBgG,GACtC,GAAIA,EAAU1D,cAAe,CAAC,IAAD,EACU0D,EAAUnH,KAAvCG,EADmB,EACnBA,OAAQN,EADW,EACXA,MAAOU,EADI,EACJA,UACvB,OAAOiG,EAAiBjG,GAAauG,EAAc3G,GAAQN,GAG7D,GAAIsH,EAAUzD,cAAgByD,EAAUvD,cACtC,MAAM,GAAN,OAAUuD,EACPrD,gBAAgB,GAChBrB,eAFH,OAEmB0E,EAAUtD,aAG/B,IAAMuD,EAAQd,EAAce,QAAQF,EAAUD,iBAC9C,MAAM,IAAN,OAAWE,EAAQ,GCYVE,CAAgBnG,Q,8BAIvB,OAAIA,KAAKsC,cACAtC,KAAKb,YAAc,iBAAmB,oBAE3Ca,KAAKuC,cAAgBvC,KAAKyC,cACrB2D,YAAWpG,KAAK2C,iBAElB,kB,kCAIP,OAAO3C,KAAKsC,eAAkBtC,KAAKuC,cAAgBvC,KAAKyC,gB,iCAKxD,OAAO,I,6BAGF4D,GACL,OAAOrG,KAAK+D,OAASsC,EAAGtC,MAAQuC,YAAQtG,KAAKnB,KAAMwH,EAAGxH,Q,oCAItD,MAAO,CACL,OACA,uBACA,mBACA,kBACA,mBACAsB,SAASH,KAAK+F,mB,oCAIhB,MAAqB,cAAd/F,KAAK+D,O,mCAIZ,MAAqB,aAAd/D,KAAK+D,O,oCAIZ,MAAqB,cAAd/D,KAAK+D,O,qCAIZ,MAAqB,eAAd/D,KAAK+D,S,4OC9EHwC,EAAiB,CAAC,QAAS,aAGlCC,EAAW,CAAI,QAAJ,OAAeD,EAAf,CAA+B,SAG1CE,EAAS,CAAC,EAAG,EAAG,GAGTC,EAAY,CAAC,QAAS,QAiBnC,SAASC,EACP5C,EACAhD,EACA0C,GAEA,MAAa,YAATM,GAA+B,IAAThD,EAAmB,CAAC,GACvC6F,YAAM,EAAGnD,EAAQ,G,IAOLoD,E,kDACnB,WAAoBhI,GAAqB,IAAD,8BACtC,cAAM,WAAYgI,EAAS/H,UAAUD,KAavCiI,UAAY,kBAAyB,IAAnB,EAAKjI,KAAKkC,MAdY,EAexCgG,aAAe,kBAAyB,IAAnB,EAAKlI,KAAKkC,MAfS,EAgBxCiG,SAAW,kBAAyB,IAAnB,EAAKnI,KAAKkC,MAhBa,EAiBxCkG,aAAe,kBAAyB,IAAnB,EAAKpI,KAAKkC,MAjBS,EAmBxC+B,UAAY,iBAAyB,YAAnB,EAAKjE,KAAKkF,MAnBY,EAoBxCmD,YAAc,iBAAyB,cAAnB,EAAKrI,KAAKkF,MApBU,EAsBxCtB,YAAc,kBAA0B,IAApB,EAAK5D,KAAK4E,QAAgB,EAAKhE,UAtBX,EAuBxCmD,OAAS,kBAA0B,IAApB,EAAK/D,KAAK4E,OAvBe,EAwBxC0D,KAAO,kBAA0B,IAApB,EAAKtI,KAAK4E,OAxBiB,EA0BxC2D,YAAc,iBAA+B,SAAzB,EAAKvI,KAAK+F,YA1BU,EA2BxCyC,YAAc,iBAA+B,UAAzB,EAAKxI,KAAK+F,YA3BU,EA4BxC/B,gBAAkB,iBAA+B,cAAzB,EAAKhE,KAAK+F,YA5BM,EA6BxCnF,OAAS,iBAA+B,SAAzB,EAAKZ,KAAK+F,YA7Be,EA+BxC5B,OAAS,iBAA2B,SAArB,EAAKnE,KAAKwE,QA/Be,EAgCxCiE,QAAU,iBAA2B,UAArB,EAAKzI,KAAKwE,QAhCc,EAmCxCxD,SAAW,kBAAMgH,EAAShH,SAAS,EAAKhB,OAnCA,EAqCxC0I,QAAU,kBAAM,EAAK9E,eAAiB,EAAK4E,eArCH,EAsCxCG,YAAc,kBAAM,EAAK/E,eAAiB,EAAKI,mBAtCP,EAwCxC4E,UAAY,kBAAM,EAAK3E,aAxCiB,EAyCxC4E,SAAW,kBAAM,EAAKR,eAA4C,IAA3B,EAAKrI,KAAK8I,cAzCT,EA0CxCC,UAAY,kBAAM,EAAK/I,KAAK4E,QAAU,EAAK5E,KAAK8I,cA1CR,EA2CxC5E,gBAAkB,kBAAM,EAAKoE,QAAqC,IAA3B,EAAKtI,KAAK8I,cA3CT,EAmExCjF,UAAY,kBAAO,EAAK7D,KAAKkC,MAAQ,EAAK+B,YAAc,EAAI,IAnEpB,EAsFxC+E,UAAY,kBAAMhB,EAASgB,UAAU,EAAKhJ,OAtFF,E,qDAI/BA,GACP,OAAOgI,EAAS/G,MAAMC,SACpB8G,EAAS/H,UAAT,2BAAwBkB,KAAKnB,MAASA,O,qCAI3B+F,EAAoCtI,GACjD,OAAO0D,KAAKD,SAAS,CAAE6E,aAAYtI,Y,gCAmCnC,GAAI0D,KAAKyH,YAAa,MAAO,UAC7B,GAAIzH,KAAK0H,WAAY,MAAO,SAC5B,GAAI1H,KAAK4H,YAAa,MAAO,UAC7B,GAAI5H,KAAK+C,kBACP,MAAM,IAAI9C,MAAJ,iDACR,MAAM,IAAIA,MAAJ,yC,iCAIN,OAAID,KAAK+C,kBAA0B,CAAC,SAAU,WACvC,CAAC/C,KAAK8E,a,6BAGRA,GACL,OAAO9E,KAAKD,SAAS,CACnB0D,MAAQzD,KAAKnB,KAAK4E,MAAQ,EAC1BkE,aAAe3H,KAAKnB,KAAK8I,cACV,YAAZ7C,EAAwB,EAAI,O,sCAMjC,IAAK9E,KAAKyC,cACR,MAAM,IAAIxC,MAAJ,4CAER,OAAOD,KAAKnB,KAAK+F,a,+BAIjB,OAAI5E,KAAK6C,kBACA7C,KAAKD,SAAS,CACnBzD,MAAOD,YAAc2D,KAAKnB,KAAKvC,SAG5B0D,KAAKD,SAAS,CACnBsD,OAA6B,UAArBrD,KAAKnB,KAAKwE,OAAqB,OAAS,a,oCAOS,IAA1CI,EAAyC,EAAzCA,MAAOM,EAAkC,EAAlCA,KAAMa,EAA4B,EAA5BA,WAC9B,OAAiB,IAAVnB,GAAwB,cAATM,GAAuC,cAAfa,I,kCAGY,IAA1CA,EAAyC,EAAzCA,WAAYnB,EAA6B,EAA7BA,MAAOM,EAAsB,EAAtBA,KACnC,MAAsB,cAAfa,GAAwC,IAAVnB,GAAwB,cAATM,I,gCAG7BlF,GAcvB,OAbKmB,KAAK6H,UAAUhJ,WACXA,EAAKwE,OAETrD,KAAKH,SAAShB,WACVA,EAAKvC,MAEV0D,KAAKH,SAAShB,KAAUA,EAAKvC,QAC/BuC,EAAKvC,MAAQ,QAEG,IAAduC,EAAKkC,MAA4B,YAAdlC,EAAKkF,OAC1BlF,EAAK8I,aAAe,GAEjB9I,EAAK8I,eAAc9I,EAAK8I,aAAe,GACrC9I,I,gLAIY5C,K,0DAAR8E,E,sBACU5E,K,0DAAR4H,E,sBACgByC,G,8DAEJ,UAFV5B,E,+EAGW6B,G,iEAAThD,E,SAGC,GACC,IAAT1C,GACS,YAATgD,GACe,cAAfa,G,2DAKY,IAAVnB,GAA8B,SAAfmB,E,sEAGQ+B,EAAc5C,EAAMhD,EAAM0C,I,8DAA1CkE,E,QAEH9I,EAAqB,CACzB4E,QACAM,OACAa,aACA7D,OACA4G,iBAEE3H,KAAK6H,UAAUhJ,G,+BACI6H,G,2DACnB,OADSrD,E,kBACH,IAAIwD,EAAJ,2BAAkBhI,GAAlB,IAAwBwE,Y,6KAEvBrD,KAAKH,SAAShB,G,+BACHzC,K,2DAClB,OADSE,E,kBACH,IAAIuK,EAAJ,2BAAkBhI,GAAlB,IAAwBvC,W,yKAGhC,O,UAAM,IAAIuK,EAAJ,2BAAkBhI,GAAlB,IAAwB8I,kB,ssBAQ1C,O,WAAM,IAAId,EAAS,CACjB9F,KAAM,EACNgD,KAAM,UACNa,WAAY,YACZnB,MAAO,EACPkE,aAAc,I,SAGhB,O,WAAM,IAAId,EAAS,CACjB9F,KAAM,EACNgD,KAAM,YACNa,WAAY,OACZnB,MAAO,EACPkE,aAAc,I,SAGhB,O,WAAM,IAAId,EAAS,CACjB9F,KAAM,EACNgD,KAAM,YACNa,WAAY,OACZnB,MAAO,EACPkE,aAAc,EACdtE,OAAQ,S,uBAIS,CAAC,EAAG,EAAG,I,8DACxB,OADStC,E,mBACH,IAAI8F,EAAS,CACjB9F,OACAgD,KAAM,UACNa,WAAY,OACZnB,MAAO,EACPkE,aAAc,I,sUAjMgBrH,KAAjBuG,EAsMZ/G,MAAQ,IAAIS,IAAQsG,EAASrG,W,qICpPjBD,E,WAInB,WAAYuH,GAAuB,yBAHnCA,aAGkC,OAFlCC,iBAEkC,OADlCC,0BACkC,EAChChI,KAAK8H,QAAL,YAAmBA,GACnB9H,KAAKgI,qBAAuB,IAAIC,IAChCjI,KAAK+H,YAAc,IAAIE,IAHS,oBAIZjI,KAAK8H,SAJO,IAIhC,2BAAkC,CAAC,IAAxBI,EAAuB,QAChClI,KAAK+H,YAAYI,IAAID,EAAMhI,OAAQgI,GAEnC,IAAMnC,EAAgBmC,EAAMnC,gBACvB/F,KAAKgI,qBAAqBI,IAAIrC,IACjC/F,KAAKgI,qBAAqBG,IAAIpC,EAAe,IAE/C/F,KAAKgI,qBAAqBG,IAAIpC,EAA9B,sBACK/F,KAAKgI,qBAAqBvG,IAAIsE,IADnC,CAEEmC,MAb4B,+B,6DAkBjBhI,GACf,OAAOF,KAAKgI,qBAAqBI,IAAIlI,K,wCAIrBA,GAChB,IAAKF,KAAKgI,qBAAqBI,IAAIlI,GACjC,MAAM,IAAID,MAAJ,mDAAsDC,IAE9D,OAAOF,KAAKgI,qBAAqBvG,IAAIvB,GAAO,K,8BAGtCA,GACN,OAAOF,KAAK+H,YAAYK,IAAIlI,K,+BAGrBA,GACP,IAAMgI,EAAQlI,KAAK+H,YAAYtG,IAAIvB,GACnC,IAAKgI,EAAO,MAAM,IAAIjI,MAAJ,yCAA4CC,IAC9D,OAAOgI,I,+BAGArJ,GAEP,IAAMuF,EAAUiE,YAAOxJ,GAAM,SAACA,GAAD,YAAmByJ,IAATzJ,KACvC,OAAO0J,YAAUvI,KAAK8H,QAAQU,QAAO,SAACC,GAAD,OAAUC,YAAQD,EAAK5J,KAAMuF,S,4BAG9DoE,GACJ,OAAOxI,KAAK8H,QAAQU,QAAO,SAACN,GAAD,OAAWM,EAAON,U,qQCpDpCzB,EAAS,CAAC,EAAG,EAAG,EAAG,GAGnBkC,EAAa,CAAC,OAAQ,QAe7BC,EAAiB/B,IAAS/G,MAAMM,OACpC,SAACC,GAAD,OAAOA,EAAEkH,YAAclH,EAAEyC,aAAezC,EAAE0G,mBAEtC8B,EAA0BjK,IAAUkB,MAAMM,OAC9C,SAACC,GAAD,OAAOA,EAAEX,aAAeW,EAAET,cAEtBkJ,EAAclK,IAAUkB,MAAMiJ,SAAS,eACvCC,EAAyBpK,IAAUkB,MAAMiJ,SAC7C,0BAGF,SAASE,EAAWC,GAClB,OAAOzC,EAAO+B,QAAO,SAAC7H,GAAD,OAAOA,GAAKuI,K,IAOdC,E,kDACnB,WAAoBtK,GAA0B,IAAD,8BAC3C,cAAM,YAAasK,EAAUrK,UAAUD,KAczC+D,OAAS,kBAA4B,IAAtB,EAAKwG,cAfyB,EAgB7CjC,KAAO,kBAA4B,IAAtB,EAAKiC,cAhB2B,EAiB7CC,MAAQ,kBAA4B,IAAtB,EAAKD,cAjB0B,EAmB7CE,YAAc,kBAAM,EAAKzK,KAAKuE,UAAY,GAnBG,EAoB7CmG,aAAe,kBAAM,EAAK1K,KAAKyE,WAAa,GApBC,EAqB7CkG,SAAW,kBAAM,EAAK3K,KAAKwE,OAAS,GArBS,EAgD7CoG,OAAS,iBAA0B,SAApB,EAAK5K,KAAK2E,OAhDoB,EAiD7CkG,OAAS,iBAA0B,SAApB,EAAK7K,KAAK2E,OAjDoB,E,qDAIpC3E,GACP,OAAOsK,EAAUrJ,MAAMC,SACrBoJ,EAAUrK,UAAV,2BAAyBkB,KAAKnB,MAASA,O,mCAI7B,IAAD,EAC+BmB,KAAKnB,KAC/C,OAFW,EACHuE,UADG,EACQE,WADR,EACoBD,S,yCAa/B,OAAOrD,KAAKnB,KAAK0E,OAAOhB,e,6CAGF,IACdgB,EAAWvD,KAAKnB,KAAhB0E,OACR,QAAKA,EAAOjB,kBACRiB,EAAOlE,eACJkE,EAAOpE,aAAeoE,EAAO5D,Y,yCAIpC,OAAOK,KAAK2J,oBAAsB3J,KAAK4J,yB,0CAGpB,IACXrG,EAAWvD,KAAKnB,KAAhB0E,OACR,OAAOA,EAAOjB,eAAiBiB,EAAOpE,aAAeoE,EAAO3D,a,sCAG7C,IACP2D,EAAWvD,KAAKnB,KAAhB0E,OACR,OAAOA,EAAOjB,eAAiBiB,EAAO/D,kB,qCAOtC,OAAO2J,EAAUU,aAAa7J,KAAKnB,Q,oCAGtB,IACL0E,EAAWvD,KAAKnB,KAAhB0E,OACR,IAAKA,EAAOhB,aACV,MAAM,IAAItC,MAAJ,iCAAoCsD,EAAOrD,SAEnD,OAAOqD,I,wCAGU,IACTA,EAAWvD,KAAKnB,KAAhB0E,OACR,IAAKA,EAAOjB,cACV,MAAM,IAAIrC,MAAJ,2CAA8CsD,EAAOrD,SAE7D,OAAOqD,I,iCAIP,IAAKvD,KAAK8J,mBACR,MAAM,IAAI7J,MAAJ,oDACR,OAAOD,KAAKD,SAAS,CACnBqD,UAAYpD,KAAKnB,KAAKuE,UAAY,EAClCI,MAAO,W,wCAIOuG,GAChB,IAAK/J,KAAKgK,oBACR,MAAM,IAAI/J,MAAJ,8DAGR,OAAI8J,EACK/J,KAAKD,SAAS,CAAEqD,UAAW,IAE7BpD,KAAKD,SAAS,CACnBuD,WAAatD,KAAKnB,KAAKyE,WAAa,EACpCE,MAAO,W,oCAIGH,GACZ,IAAKrD,KAAKiK,gBACR,MAAM,IAAIhK,MAAJ,sDACR,MAAe,UAAXoD,EACKrD,KAAKD,SAAS,CACnBsD,OAASrD,KAAKnB,KAAKwE,OAAS,EAC5BC,WAAatD,KAAKnB,KAAKyE,WAAa,IAGjCtD,KAAKD,SAAS,CACnBuD,WAAatD,KAAKnB,KAAKyE,WAAa,EACpCE,MAAO,W,iCAKT,OAAOxD,KAAKD,SAAS,CACnBsD,OAASrD,KAAKnB,KAAKwE,OAAS,EAC5BG,MAAO,Y,uCASY,IAJrBD,EAIoB,EAJpBA,OAIoB,IAHpBH,iBAGoB,MAHR,EAGQ,MAFpBE,kBAEoB,MAFP,EAEO,MADpBD,OAGA,OAAc,IADAD,EAAYE,QADN,MADX,EACW,KAIhBC,EAAOhB,aAAqBgB,EAAO2D,gBAEnC3D,EAAOjB,eAAsBiB,EAAOrE,mB,gCAIjBL,GAIvB,OAHKmB,KAAK6J,aAAahL,WACdA,EAAK2E,MAEP,aAAEJ,UAAW,EAAGE,WAAY,EAAGD,OAAQ,GAAMxE,K,oDAG5BA,G,+EACpBmB,KAAK6J,aAAahL,G,+BACA8J,G,yDAClB,OADSnF,E,iBACH,IAAI2F,EAAJ,2BAAmBtK,GAAnB,IAAyB2E,W,sKAGjC,O,UAAM,IAAI2F,EAAUtK,G,kGAIL0E,GACjB,OAAIA,EAAOhB,aAAqBgB,EAAO1E,KAAKkC,KAAO,IAAM,EAAI,EAAI,EAC1DwC,EAAO1E,KAAKG,OAAS,I,0KAKH4J,G,YAAmBC,I,yCAAjCtF,E,mBACe0F,EAAWjJ,KAAKkK,YAAY3G,K,yDAClD,OADSH,E,QACT,gBAAOpD,KAAKmK,kBAAkB,CAAE5G,SAAQH,cAAxC,Q,uLAOqBqD,G,2DACvB,OADSnD,E,QACT,gBAAOtD,KAAKmK,kBAAkB,CAAE5G,OAAQuF,EAAaxF,eAArD,S,iJAEF,O,UAAM,IAAI6F,EAAU,CAAE5F,OAAQuF,EAAaxF,WAAY,EAAGF,UAAW,I,sBAGhDqD,G,2DAAVpD,E,sBACgB4F,EAAW,EAAI5F,I,2DACtC,OADSC,E,QACT,gBAAOtD,KAAKmK,kBAAkB,CAC5B5G,OAAQyF,EACR3F,SACAC,eAHF,S,iYA7K+BhD,KAAlB6I,EAsLZrJ,MAAQ,IAAIS,IAAQ4I,EAAU3I,W,idC9ItB4J,GAhFXC,EAAMC,YAAUC,gBAKf,SAASC,EAAarG,EAAY8B,GACvC,OAAO9B,EAAMkG,EAAIpE,EAAO9B,EAAMsG,SAMzB,SAASC,EAAUC,EAAUhK,GAClC,OAAOiK,MAASjK,GAAGkK,KAAKF,GAMnB,SAASG,EACdC,EACAC,GAEA,OAAO9N,OAAO+N,YAAYF,EAAIG,IAAIF,IAG7B,SAASG,EACdJ,EACAK,EACAC,GAEA,OAAOC,YAAOP,EAAIQ,QAAQH,GAAYC,GAMjC,SAASG,EAAQC,EAAmBC,GAAkC,IAAD,gBACvDD,GADuD,IAC1E,2BAAyB,CAAC,IAAfhD,EAAc,QACvB,GAAIiD,EAAUjD,GAAO,OAAOA,GAF4C,8BAI1E,MAAM,IAAIxI,MAAJ,iCAAoCwL,EAApC,qBAAqDC,IAMtD,SAASnD,EAAapE,GAC3B,GAAqB,IAAjBA,EAAMsG,OACR,MAAM,IAAIxK,MAAJ,8CACmC0L,KAAKC,UAAUzH,KAG1D,OAAOA,EAAM,GAGR,SAAS0H,EAAUC,GAExB,OAAOA,EADOC,KAAKC,MAAMD,KAAKE,SAAWH,EAAQrB,SAO5C,SAASyB,EAAWC,EAAWlG,GACpC,MAAO,CAACkG,EAAKC,MAAM,EAAGnG,GAAQkG,EAAKC,MAAMnG,IAYpC,IAAMoG,EAAS,SAACC,GAAD,OAAiBA,EAAI5H,QAAQ,KAAM,MAGlD,SAAU0F,EAAamC,GAAvB,8FAEe,KADdC,EAAOtP,OAAOsP,KAAKD,IAChB9B,OAFJ,iDAGCgC,EAAMD,EAAK,GACFE,GAJV,EAIuCH,GAAnCE,GAAgBE,EAJpB,eAIIF,GAJJ,wBAKcC,GALd,yDAKMjE,EALN,sBAMgB2B,EAAUuC,IAN1B,2DAOD,OADSrI,EANR,kBAOD,aAAQ,CAACmI,GAAMhE,GAASnE,GAPvB,wHAAAsI,IAAA,mIAAAA,IAAA,yF,mOChFQ,SAASC,EAAT,GAA6C,IAA3BC,EAA0B,EAA1BA,SACzBxO,EAAMR,YAAS,CACnBiP,OAAQ,EACRC,MAAO,EACPC,SAAU,WACVC,SAAU,SACVC,KAAM,6BAER,OAAO,yBAAU7O,IAAQwO,G,YCVZ,SAASM,EAAT,GAI8B,IAH3CC,EAG0C,EAH1CA,KACAP,EAE0C,EAF1CA,SACGQ,EACuC,mCAC1C,OACE,qCAAGC,OAAO,SAASC,IAAI,sBAAsBH,KAAMA,GAAUC,GAC1DR,GCPQ,SAASW,EAAaC,GAInCC,qBAAU,WACRC,SAASF,MAAQA,IAChB,CAACA,I,6BCWS,SAASG,EACtBC,EACAC,GAEA,IAAMC,EAAeC,YAAWF,GAC5BA,IACAA,EACEG,EAAeC,IAAMC,cAAiBJ,GAEtCK,EAAgBF,IAAMC,cAA0B,IAEtD,MAAO,CACLE,SAAS,GAAmC,IAAjCxB,EAAgC,EAAhCA,SAAaQ,EAAmB,4BACnCU,EAAeC,YAAWF,GAC5BA,EAAoBT,GACpBS,EAHqC,EAIfQ,sBACxB,SAACC,EAAUC,GAAX,OAAiCA,EAAOD,KACxCR,GANuC,mBAIlCQ,EAJkC,KAI3BE,EAJ2B,KASnCC,EAAe1Q,mBAAQ,WAC3B,OAAO2Q,YACLd,GACA,SAACW,GAAD,OAA8B,kBAC5BC,EAASD,EAAM,WAAN,oBAEZ,IAEH,OACE,kBAACP,EAAaI,SAAd,CAAuB3D,MAAO6D,GAC5B,kBAACH,EAAcC,SAAf,CAAwB3D,MAAOgE,GAC5B7B,KAKT+B,SAAQ,IACCC,qBAAWZ,GAEpBa,WAAU,IACDD,qBAAWT,I,aCrDT,SAASW,EACtBC,GAEA,OAAO,gBAAGnC,EAAH,EAAGA,SAAH,OACLoC,YACED,GACA,SAACE,EAASC,GAAV,OAVN,SAAsBd,EAAqBxB,GACzC,OAAO,kBAACwB,EAAD,KAAWxB,GASSuC,CAAaD,EAAUD,KAC9CrC,M,8BCdN,sLACa1H,EAAoB,SAACkK,GAAD,OAC/BC,OAAQ,YAAWD,EAAZ,WAGIE,EADE,CAAC,WAAY,cAAe,SAAU,aAAc,WAC/BjE,QAAQnG,GAErC,SAASqK,EAAaC,GAC3B,OAAOF,EAAcrP,SAASuP,GAGzB,SAASC,EAAiBD,GAC/B,IAAKD,EAAaC,GAChB,MAAM,IAAIzP,MAAJ,mCAAsCyP,IAE9C,OAAOA,EAGF,SAASE,EAAaF,GAE3B,IAAMG,EAAcxD,YAAOsD,EAAiBD,IAC5C,OAAOH,OAAQ,YAAkBM,EAAnB,Y,gyBCjBHC,EAAQ,CACnB,eACA,yBACA,mBACA,uBACA,mBACA,kBACA,gCASmBC,E,kDACnB,WAAYlR,GAAuB,uCAC3B,aAAcA,G,+JAIDiR,G,wDACjB,OADS/O,E,iBACH,IAAIgP,EAAW,CAAEhP,S,0MAPWT,KAAnByP,EAWZjQ,MAAQ,IAAIS,IAAQwP,EAAWvP,UC1BxC,IAAMwP,EAAa,CAACpR,IAAWiI,IAAUsC,IAAW4G,GAE7C,SAASE,EAAkB/P,GAAe,IAAD,gBACvB8P,GADuB,IAC9C,2BAAmC,CAAC,IAAzBE,EAAwB,QACjC,GAAIA,EAASpQ,MAAMqQ,iBAAiBjQ,GAClC,OAAOgQ,EAASpQ,MAAMsQ,kBAAkBlQ,IAHE,8BAM9C,MAAM,IAAID,MAAJ,uDAA0DC,IAG3D,SAASmQ,EAASnQ,GAAe,IAAD,gBACd8P,GADc,IACrC,2BAAmC,CAAC,IAAzBE,EAAwB,QACjC,GAAIA,EAASpQ,MAAMwQ,QAAQpQ,GAEzB,OAAOgQ,EAASpQ,MAAMiJ,SAAS7I,IAJE,8BAOrC,MAAM,IAAID,MAAJ,6CAAgDC,M,kJClBlDqQ,EAAgB,CACpBjT,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,EAAG,UACHI,EAAG,UACH2S,GAAI,WAeAC,EAAmBvU,IAASgP,KAAI,SAACvK,GACrC,MAAO,CACL8L,IAAI,UAAD,OAAY9L,EAAZ,KACH+P,QAAQ,GAAD,OAAKC,YAAU7U,IAAa2F,IAAId,IAAhC,UACPoD,KAAM,QACN6M,QAASL,EAAc5P,OAIdkQ,EAA8B,CACzC,CACEpE,IAAK,YACL1I,KAAM,WACN6M,SAAS,GAEX,CACEnE,IAAK,YACL1I,KAAM,WACN6M,SAAS,GAEX,CACEnE,IAAK,iBACL1I,KAAM,WACN6M,SAAS,GAEX,CACEnE,IAAK,oBACL1I,KAAM,WACN6M,SAAS,GAEX,CACEnE,IAAK,UACL1I,KAAM,QACN6M,QAAS,EACTE,IAAK,EACLC,IAAK,EACLC,KAAM,KAER,CACEvE,IAAK,kBACL1I,KAAM,WACN6M,SAAS,GAEX,CACEnE,IAAK,iBACL1I,KAAM,SACNkN,QAAS,CAAC,IAAM,GAAK,IAAM,EAAG,KAAM,IAAK,GACzCL,QAAS,IAtC8B,mBAwCtCH,IACHvF,KAAI,SAACgG,GAAD,yBAAC,eACFA,GADC,IAEJR,QAAO,iBAAEQ,QAAF,IAAEA,OAAF,EAAEA,EAAOR,eAAT,QAAoBC,YAAUO,EAAMzE,UAGhC0E,EAAqCN,EAAaO,QAC7D,SAACC,EAAKC,GAAN,OAAiBnJ,YAAIkJ,EAAKC,EAAO7E,IAAK6E,EAAOV,WAC7C,K,kHChFW7U,EAAb,WAIE,WAAY+L,GAAqC,sIAC/C,IAAMyJ,EAAQ,YAAOzJ,GACrB,YAAA9H,KAAA,MAAY,IAAIiI,IAAIsJ,GACpB,YAAAvR,KAAA,MAAY,IAAIiI,IAAIsJ,EAASrG,KAAI,mCAAEsG,EAAF,WAAY,CAAZ,KAAgBA,OAPrD,gDAaM/E,GACF,OAAO,YAAAzM,KAAA,MAAUyB,IAAIgL,KAdzB,yBAoBKgF,GACD,OAAO,YAAAzR,KAAA,MAAUyB,IAAIgQ,KArBzB,6BA2BShF,GACL,OAAO,YAAAzM,KAAA,MAAUoI,IAAIqE,KA5BzB,+BAkCWgF,GACP,OAAO,YAAAzR,KAAA,MAAUoI,IAAIqJ,KAnCzB,6BA0CI,OAAO,YAAAzR,KAAA,MAAUwM,SA1CrB,+BAiDI,OAAO,YAAAxM,KAAA,MAAU0R,aAjDrB,K,oOC2CUC,GA5CGC,EAAkD,CAC7DC,YAAa,CACX,mBACA,qBACA,oBACA,cAEF,wBAAyB,CAAC,8BAC1BC,KAAM,CAAC,gBACPC,WAAY,CAAC,mBAAoB,uBAAwB,oBACzDjJ,YAAa,CACX,wBACA,qCACA,6BAEFkJ,cAAe,CAAC,yBAA0B,2BAC1C,uBAAwB,CAAC,8BACzBC,oBAAqB,CAAC,kCACtBC,kBAAmB,CAAC,4BAGpB,mBAAoB,CAAC,YAAa,kBAClCC,gBAAiB,CAAC,wBAGlB,uBAAwB,CAAC,yBACzB,2BAA4B,CAAC,iBAAkB,0BAC/C,6BAA8B,CAC5B,mBACA,4BAGF,iBAAkB,CAAC,yBACnB,uBAAwB,CAAC,gCACzB,mCAAoC,CAAC,0BAGrC,gCAAiC,CAAC,8BAClC,0BAA2B,CAAC,kCAC5B,kBAAmB,CAAC,oCAGpB,kBAAmB,CAAC,2BAEtB,SAAUR,IAAV,2FACkCzU,OAAO4K,QAAQ8J,GADjD,+DACcQ,EADd,KACyBC,EADzB,mBAEsBA,GAFtB,yDAGM,OADSC,EAFf,kBAGY,CAACA,EAAKF,GAHlB,sHAAAxF,IAAA,oGAQA,IAAM2F,EAAmBrV,OAAO+N,YAAY0G,KACtCa,EAAiBtV,OAAOsP,KAAK+F,GAE5B,SAAS1M,EAAiB3F,GAC/B,IAAMkS,EAAYG,EAAiBrS,GACnC,OAAIkS,GACGzC,YAAiBzP,GAGnB,SAAS4F,EAAkB5F,GAAe,IAAD,EAC9C,iBAAO0R,EAAsB1R,UAA7B,QAAsC,GAGjC,SAASuS,EAAgBvS,GAC9B,OAAOsS,EAAerS,SAASD,K,kCCpEjC,gIAAO,IAAMwS,EAAQ,CAAC,kBAAmB,QAAS,SAErCC,EAAa,CAAC,cAAe,aAAc,aAE3CC,EAAU,CAAC,UAAW,SAAU,e,+BCJ7C,sCAKe/E,gBACb,CACEgF,SAAU,SAAIpG,EAAa9B,GAAjB,OAA8B,SAAC6D,GAAD,OACtCrG,YAAI2K,YAAUtE,GAAQ/B,EAAK9B,KAC7BoI,MAAO,kBAAM,kBAAM5B,OAErBA,M,uICPF,SAAS6B,IACP,OAAOC,OAAOC,WAAa,EAAID,OAAOC,WAAaD,OAAOE,OAAOnG,MAInE,IAAMoG,EAAgBjF,IAAMC,cAAciF,IAAM3W,iBAEzC,SAAS4W,EAAT,GAAqD,IAA3BxG,EAA0B,EAA1BA,SAA0B,EAC/B+B,mBAASmE,KADsB,mBAClDhG,EADkD,KAC3CuG,EAD2C,KAWzD,OARA5F,qBAAU,WACR,IAAM6F,EAAe,kBAAMD,EAASP,MAEpC,OADAC,OAAOQ,iBAAiB,SAAUD,GAC3B,WACLP,OAAOS,oBAAoB,SAAUF,MAEtC,IAGD,kBAACJ,EAAc9E,SAAf,CAAwB3D,MAAOqC,GAAQF,GAQ3C,SAAS6G,EAAe3G,GACtB,OAAOA,GAASqG,IAAM7W,uBAAyB,WAAa,YAG/C,SAASoX,IACtB,IAAM5G,EAAQ8B,qBAAWsE,GACzB,OAVF,SAAkBpG,GAChB,OAAOA,GAASqG,IAAM9W,eASlBsX,CAAS7G,GACJ,CAAE8G,OAAQ,SAAUC,YAAaJ,EAAe3G,IAElD,CAAE8G,OAAQ,UAAWC,YAAa,Q,qFCxC3C,IAAI7I,EAAM,CACT,oBAAqB,IACrB,qBAAsB,IACtB,iBAAkB,IAClB,kBAAmB,IACnB,gBAAiB,KAIlB,SAAS8I,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEnJ,EAAK+I,GAAM,CACpC,IAAIK,EAAI,IAAIrU,MAAM,uBAAyBgU,EAAM,KAEjD,MADAK,EAAEC,KAAO,mBACHD,EAEP,OAAOpJ,EAAI+I,GAEZD,EAAexH,KAAO,WACrB,OAAOtP,OAAOsP,KAAKtB,IAEpB8I,EAAeQ,QAAUL,EACzBM,EAAOC,QAAUV,EACjBA,EAAeE,GAAK,K,gjHC1BpB,IAAIhJ,EAAM,CACT,gCAAiC,IACjC,mCAAoC,IACpC,oCAAqC,IACrC,gCAAiC,IACjC,oCAAqC,IACrC,6CAA8C,IAC9C,kCAAmC,IACnC,0CAA2C,IAC3C,yCAA0C,IAC1C,sCAAuC,IACvC,sCAAuC,IACvC,oCAAqC,IACrC,oDAAqD,IACrD,yBAA0B,IAC1B,cAAe,IACf,uBAAwB,IACxB,6BAA8B,IAC9B,yBAA0B,IAC1B,2CAA4C,IAC5C,0BAA2B,IAC3B,sBAAuB,IACvB,wCAAyC,IACzC,qCAAsC,IACtC,2CAA4C,IAC5C,4CAA6C,IAC7C,gDAAiD,IACjD,4CAA6C,IAC7C,6CAA8C,IAC9C,iDAAkD,IAClD,sCAAuC,IACvC,sCAAuC,IACvC,oCAAqC,IACrC,iCAAkC,IAClC,uCAAwC,IACxC,kCAAmC,IACnC,wCAAyC,IACzC,qCAAsC,IACtC,2CAA4C,IAC5C,4CAA6C,IAC7C,sCAAuC,IACvC,oDAAqD,IACrD,uCAAwC,IACxC,yBAA0B,IAC1B,2CAA4C,IAC5C,4CAA6C,IAC7C,yCAA0C,IAC1C,gDAAiD,IACjD,0CAA2C,IAC3C,0CAA2C,IAC3C,uCAAwC,IACxC,wCAAyC,IACzC,qCAAsC,IACtC,sCAAuC,IACvC,2CAA4C,IAC5C,yCAA0C,IAC1C,8BAA+B,IAC/B,6BAA8B,IAC9B,yBAA0B,IAC1B,qBAAsB,IACtB,2BAA4B,IAC5B,sCAAuC,IACvC,yCAA0C,IAC1C,gDAAiD,IACjD,sCAAuC,IACvC,iDAAkD,IAClD,6CAA8C,IAC9C,sDAAuD,IACvD,6BAA8B,IAC9B,yBAA0B,IAC1B,oBAAqB,IACrB,sCAAuC,IACvC,yCAA0C,IAC1C,gDAAiD,IACjD,iDAAkD,IAClD,6CAA8C,IAC9C,sDAAuD,IACvD,8BAA+B,IAC/B,8BAA+B,IAC/B,2BAA4B,IAC5B,iCAAkC,IAClC,sCAAuC,IACvC,kCAAmC,IACnC,mCAAoC,IACpC,uCAAwC,IACxC,0BAA2B,IAC3B,4BAA6B,IAC7B,4BAA6B,IAC7B,gCAAiC,IACjC,6BAA8B,IAC9B,4BAA6B,IAC7B,yBAA0B,IAC1B,gCAAiC,IACjC,+BAAgC,IAChC,sBAAuB,IACvB,0BAA2B,IAC3B,0BAA2B,IAC3B,uBAAwB,IACxB,6BAA8B,IAC9B,8BAA+B,IAC/B,wBAAyB,IACzB,qBAAsB,IACtB,8BAA+B,IAC/B,2BAA4B,IAC5B,sCAAuC,IACvC,kCAAmC,IACnC,0BAA2B,IAC3B,mCAAoC,IACpC,sCAAuC,IACvC,uCAAwC,IACxC,6CAA8C,IAC9C,mCAAoC,IACpC,8CAA+C,IAC/C,0CAA2C,IAC3C,wBAAyB,IACzB,iCAAkC,IAClC,gCAAiC,IACjC,+BAAgC,IAChC,qCAAsC,IACtC,8BAA+B,IAC/B,+BAAgC,KAIjC,SAAS8I,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEnJ,EAAK+I,GAAM,CACpC,IAAIK,EAAI,IAAIrU,MAAM,uBAAyBgU,EAAM,KAEjD,MADAK,EAAEC,KAAO,mBACHD,EAEP,OAAOpJ,EAAI+I,GAEZD,EAAexH,KAAO,WACrB,OAAOtP,OAAOsP,KAAKtB,IAEpB8I,EAAeQ,QAAUL,EACzBM,EAAOC,QAAUV,EACjBA,EAAeE,GAAK,K,umjLC/HdS,EAAcC,QACW,cAA7B3B,OAAO4B,SAASC,UAEe,UAA7B7B,OAAO4B,SAASC,UAEhB7B,OAAO4B,SAASC,SAASC,MACvB,2DA2CN,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBjH,QACf2G,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,+GAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,M,oFChGlD,SAASC,IACtB,IAAM7X,EAAMR,YAAS,CACnBkP,MAAO,QACPD,OAAQ,QAER2D,QAAS,OACT0F,eAAgB,SAChBC,aAAc,SACdC,WAAY,SACZC,aAAc,SACdC,QAASC,IAAO9Y,QAAQ,KAGpB+Y,EAAO5Y,YAAS,CACpB6Y,WAAYC,IAAMjE,WAClBkE,SAAUJ,IAAOxZ,KAAK,KAGxB,OACE,wBAASqB,IACP,kBAAC,IAAD,CAAMV,KAAM6Y,IAAO7Y,KAAK,GAAIkZ,KAAMC,IAAmBC,MAAI,IACzD,wBAASN,IAAT,eCtBN,IAAMO,EAAW9I,IAAM+I,MAAK,kBAAM,uDAC5BC,EAAahJ,IAAM+I,MAAK,kBAAM,uDAErB,SAASE,IAEtB,OCNa,WAA2B,IAAD,EACVC,cAArBC,EAD+B,EAC/BA,SAAUC,EADqB,EACrBA,OAClB5J,qBAAU,WACR6J,IAAQC,SAASH,EAAWC,KAC3B,CAACD,EAAUC,IDCdG,GAEE,kBAAC,WAAD,CAAUC,SAAU,kBAACxB,EAAD,OAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOW,KAAK,IAAIc,QAAS,kBAACX,EAAD,QACzB,kBAAC,IAAD,CAAOH,KAAK,WAAWc,QAAS,kBAACT,EAAD,UEPxC,IAAMU,EAAY7I,YAAc,CAC9B8I,IACAxE,IACAyE,IAAUzJ,WAGG,SAAS0J,IACtB,OACE,kBAACH,EAAD,KACE,kBAACT,EAAD,O,4BCFNI,IAAQS,WADkC,kBAG1C,IAAMC,EAAOtK,SAASuK,eAAe,QACjCD,GACFE,IAASC,OAAO,kBAACL,EAAD,MAAUE,GLUrB,SAAkBhD,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAImD,IAAIC,GAAwBtF,OAAO4B,SAASxH,MACpDmL,SAAWvF,OAAO4B,SAAS2D,OAIvC,OAGFvF,OAAOQ,iBAAiB,QAAQ,WAC9B,IAAMwB,EAAK,UAAMsD,GAAN,sBAEP5D,IAgEV,SAAiCM,EAAeC,GAE9CuD,MAAMxD,EAAO,CACXyD,QAAS,CAAE,iBAAkB,YAE5BpD,MAAK,SAACqD,GAEL,IAAMC,EAAcD,EAASD,QAAQjX,IAAI,gBAEnB,MAApBkX,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAY1S,QAAQ,cAG5CiP,UAAUC,cAAc0D,MAAMxD,MAAK,SAACC,GAClCA,EAAawD,aAAazD,MAAK,WAC7BrC,OAAO4B,SAASmE,eAKpBhE,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEAvFAmD,CAAwBhE,EAAOC,GAI/BC,UAAUC,cAAc0D,MAAMxD,MAAK,WACjCO,QAAQC,IACN,+GAMJd,EAAgBC,EAAOC,OKpC/BE,K","file":"static/js/main.4cafae77.chunk.js","sourcesContent":["import { Items } from \"types\"\nimport { BiMap } from \"bimap\"\n\nexport const polygonNames = new BiMap([\n  [3, \"triangle\"],\n  [4, \"square\"],\n  [5, \"pentagon\"],\n  [6, \"hexagon\"],\n  [8, \"octagon\"],\n  [10, \"decagon\"],\n] as const)\n\nexport const polygonPrefixes = new BiMap([\n  [1, \"monogonal\"],\n  [2, \"digonal\"],\n  [3, \"triangular\"],\n  [4, \"square\"],\n  [5, \"pentagonal\"],\n  [6, \"hexagonal\"],\n  [8, \"octagonal\"],\n  [10, \"decagonal\"],\n] as const)\n\nexport const primaryPolygons = [3, 4, 5] as const\nexport type PrimaryPolygon = Items<typeof primaryPolygons>\n\nexport const secondaryPolygons = [6, 8, 10] as const\nexport type SecondaryPolygon = Items<typeof secondaryPolygons>\n\nexport const polygons = [...primaryPolygons, ...secondaryPolygons]\nexport type Polygon = PrimaryPolygon | SecondaryPolygon\n\nexport const polygonTypes = [\"primary\", \"secondary\"] as const\nexport type PolygonType = Items<typeof polygonTypes>\n\n/** Type representing chiral orientation or rotation direction. */\nexport type Twist = \"left\" | \"right\"\nexport const twists: Twist[] = [\"left\", \"right\"]\nexport function oppositeTwist(twist: Twist) {\n  return twist === \"left\" ? \"right\" : \"left\"\n}\n","// https://gist.github.com/gokulkrishh/242e68d1ee94ad05f488\n\nexport const mobileMaxWidth = 767\nexport const mobilePortraitMaxWidth = 480\nexport const tabletMaxWidth = 1024\nexport const desktopMinWidth = tabletMaxWidth + 1\n\nexport const tabletPortrait = `@media (min-width: ${\n  mobileMaxWidth + 1\n}px) and (max-width: ${tabletMaxWidth}px)`\nexport const mobile = `@media (max-width: ${mobileMaxWidth}px)`\nexport const mobileLandscape = `@media (min-width: ${\n  mobilePortraitMaxWidth + 1\n}px) and (max-width: ${mobileMaxWidth}px)`\nexport const mobilePortrait = `@media (max-width: ${mobilePortraitMaxWidth}px)`\nexport const notMobile = `@media (min-width: ${mobileMaxWidth + 1}px)`\nexport const desktop = `@media (min-width: ${desktopMinWidth}px)`\n","/**\n * Scales for font sizes, width/height, and spacing based on tachyons\n */\n\ntype ScaleIndex = 1 | 2 | 3 | 4 | 5 | 6 | 7\n\n/**\n * A scale for font size.\n *\n * 1. 3rem (48px)\n * 2. 2.25rem (36px)\n * 3. 1.5rem (24px)\n * 4. 1.25rem (20px)\n * 5. 1rem (16px)\n * 6. 0.875rem (14px)\n * 7. 0.75rem (12px)\n *\n * @see http://tachyons.io/docs/typography/scale/\n */\nexport const font: Record<ScaleIndex, string> = Object.freeze({\n  1: \"3rem\",\n  2: \"2.25rem\",\n  3: \"1.5rem\",\n  4: \"1.25rem\",\n  5: \"1rem\",\n  6: \"0.875rem\",\n  7: \"0.75rem\",\n})\n\n/**\n * A scale used for margin/padding/grid gap.\n *\n * 1. 0.25rem (4px)\n * 2. 0.5rem (8px)\n * 3. 1rem (16px)\n * 4. 2rem (32px)\n * 5. 4rem (64px)\n * 6. 8rem (128px)\n * 7. 16rem (256px)\n *\n * @see http://tachyons.io/docs/layout/spacing/\n */\nexport const spacing: Record<ScaleIndex, string> = Object.freeze({\n  1: \"0.25rem\",\n  2: \"0.5rem\",\n  3: \"1rem\",\n  4: \"2rem\",\n  5: \"4rem\",\n  6: \"8rem\",\n  7: \"16rem\",\n})\n\n/**\n * A scale used for widths and heights.\n *\n * 1. 1rem (16px)\n * 2. 2rem (32px)\n * 3. 4rem (64px)\n * 4. 8rem (128px)\n * 5. 16rem (256px)\n * 6. 32rem (512px)\n * 7. 48rem (768px)\n * 8. 64rem (1024px)\n *\n * @see http://tachyons.io/docs/layout/widths/\n */\nexport const size: Record<ScaleIndex | 8, string> = Object.freeze({\n  1: \"1rem\",\n  2: \"2rem\",\n  3: \"4rem\",\n  4: \"8rem\",\n  5: \"16rem\",\n  6: \"32rem\",\n  7: \"48rem\",\n  8: \"64rem\",\n})\n","import { useMemo } from \"react\"\nimport { StyleSheet, css, CSSProperties } from \"aphrodite/no-important\"\n\n/**\n * Hook that allows you to define dynamic (or static) css for use in a component.\n *\n * @param styles The CSS properties to compile\n * @param deps list of dependencies (like in useMemo). *Unlike* useMemo and useEffect,\n * this defaults to [], meaning your styles won't be recalculated at each render\n * (since this is the most common case)\n * @returns a function to compile the style that takes in an optional `prop` parameter\n * (default `className`).\n * \n * Examples:\n *\n * ```\n // Normal usage\n function Component1() {\n   const css = useStyle({ margin: '1rem' })\n   return <div {...css()}>My Component</div>\n }\n \n // Pass in props\n function Component2({ type }) {\n   const css = useStyle({\n     color: type === 'primary' ? 'blue' : 'white'\n   }, [type])\n   return <button {...css()}>Click Me</button>\n }\n \n // Choose prop name\n function CustomLink() {\n   const css = useStyle({ color: 'gray' })\n   const activeCss = useStyle({ color: 'black' })\n \n   // React Router `Link` component\n   return <Link {...css()} {...activeCss('activeClassName')}>Click Me</Link>\n }\n ```\n */\nexport default function useStyle(styles: CSSProperties, deps: unknown[] = []) {\n  return useMemo(() => {\n    const rule = StyleSheet.create({ styles })\n    return (prop = \"className\") => ({\n      [prop]: css(rule.styles),\n    })\n    // eslint-disable-next-line\n  }, [styles, ...deps])\n}\n","import { Items } from \"types\"\nimport { PrimaryPolygon, primaryPolygons, Twist, twists } from \"./common\"\nimport Specs from \"./PolyhedronSpecs\"\nimport Queries from \"./Queries\"\n\nexport const families = primaryPolygons\nexport type Family = PrimaryPolygon\n\nexport const facets = [\"face\", \"vertex\"] as const\nexport type Facet = Items<typeof facets>\nexport function oppositeFacet(facet: Facet) {\n  return facet === \"face\" ? \"vertex\" : \"face\"\n}\n\nexport const operations = [\n  \"regular\",\n  \"truncate\",\n  \"rectify\",\n  \"bevel\",\n  \"cantellate\",\n  \"snub\",\n] as const\nexport type Operation = Items<typeof operations>\n\ninterface ClassicalData {\n  family: Family\n  facet?: Facet\n  operation: Operation\n  twist?: Twist\n}\n\n/**\n * An classical uniform polyhedron is a Platonic or Archimedean solid.\n */\nexport default class Classical extends Specs<ClassicalData> {\n  private constructor(data: ClassicalData) {\n    super(\"classical\", Classical.cleanData(data))\n  }\n\n  withData(data: Partial<ClassicalData>) {\n    return Classical.query.withData(\n      Classical.cleanData({ ...this.data, ...data }),\n    )\n  }\n\n  withOperation(operation: Operation, twist?: Twist) {\n    return this.withData({ operation, twist })\n  }\n\n  isTetrahedral = () => this.data.family === 3\n  isOctahedral = () => this.data.family === 4\n  isIcosahedral = () => this.data.family === 5\n\n  isRegular = () => this.data.operation === \"regular\"\n  isTruncated = () => this.data.operation === \"truncate\"\n  isRectified = () => this.data.operation === \"rectify\"\n  isBevelled = () => this.data.operation === \"bevel\"\n  isCantellated = () => this.data.operation === \"cantellate\"\n  isSnub = () => this.data.operation === \"snub\"\n\n  hasFacet = () => Classical.hasFacet(this.data.operation)\n  facet() {\n    if (!this.data.facet) throw new Error(`Spec ${this.name()} has no facet`)\n    return this.data.facet\n  }\n\n  isFace = () => this.data.facet === \"face\"\n  isVertex = () => this.data.facet === \"vertex\"\n\n  isChiral = () => this.isSnub()\n\n  static hasFacet(operation: Operation) {\n    return [\"regular\", \"truncate\"].includes(operation)\n  }\n\n  private static cleanData(data: ClassicalData) {\n    if (!this.hasFacet(data.operation)) {\n      delete data.facet\n    }\n    if (data.operation !== \"snub\") {\n      delete data.twist\n    }\n    // Set a default twist for snub solids\n    if (data.operation === \"snub\" && !data.twist) {\n      data.twist = \"left\"\n    }\n    return data\n  }\n\n  static *getAll() {\n    for (const operation of operations) {\n      for (const family of families) {\n        if (this.hasFacet(operation)) {\n          for (const facet of facets) {\n            yield new Classical({ family, operation, facet })\n          }\n        } else if (operation === \"snub\") {\n          for (const twist of twists) {\n            yield new Classical({ family, operation, twist })\n          }\n        } else {\n          yield new Classical({ family, operation })\n        }\n      }\n    }\n  }\n\n  static query = new Queries(Classical.getAll())\n\n  static allWithOperation(operation: Operation) {\n    return this.query.where((s) => s.data.operation === operation)\n  }\n}\n","import { Polygon, polygonPrefixes } from \"./common\"\n\ntype SymPolygon = 1 | 2 | Polygon\n\ninterface Metadata {\n  /** True if the polyhedron is chiral */\n  chiral: boolean\n  /** The group notation of the symmetry group */\n  group: string\n  /** The base of the symmetry group */\n  n?: SymPolygon\n  /** The subscript to append when achiral */\n  achiralSub: string\n  /** The order of the rotation group */\n  rotationalOrder: number\n}\n\n/**\n * A class containing symmetry information of a Polyhedron that can be expressed\n * as a string or a shorthand symbol, as well as the order of the symmetry group.\n */\nexport abstract class Symmetry {\n  meta: Metadata\n\n  constructor(meta: Metadata) {\n    this.meta = meta\n  }\n\n  /**\n   * Returns the name of this symmetry group.\n   */\n  abstract name(): string\n\n  /**\n   * Returns a symbol as a { base, sub } object.\n   */\n  symbol() {\n    const { n, achiralSub, chiral } = this.meta\n    const sub = `${n ?? \"\"}${chiral ? \"\" : achiralSub}`\n    return { base: this.meta.group, sub }\n  }\n\n  /**\n   * Returns a symbol as a string in the form {base}_{sub}.\n   */\n  symbolStr() {\n    const { base, sub } = this.symbol()\n    if (!sub) return base\n    return `${base}_${sub}`\n  }\n\n  /**\n   * Returns the order of this symmetry group.\n   */\n  order() {\n    return this.meta.rotationalOrder * (this.meta.chiral ? 1 : 2)\n  }\n}\n\ntype Family = 3 | 4 | 5\n\nconst polyhedralOrders = {\n  3: 12,\n  4: 24,\n  5: 60,\n}\n\nconst groupNames = {\n  3: \"tetrahedral\",\n  4: \"octahedral\",\n  5: \"icosahedral\",\n}\n\ninterface PolyhedralData {\n  family: Family\n  chiral?: boolean\n}\n\nexport class Polyhedral extends Symmetry {\n  private data: PolyhedralData\n  constructor(data: PolyhedralData) {\n    const { family, chiral } = data\n    super({\n      group: groupNames[family][0].toUpperCase(),\n      achiralSub: family === 3 ? \"d\" : \"h\",\n      chiral: !!chiral,\n      rotationalOrder: polyhedralOrders[family],\n    })\n    this.data = data\n  }\n\n  name() {\n    const { family, chiral } = this.data\n    return `${chiral ? \"chiral\" : \"full\"} ${groupNames[family]}`\n  }\n\n  static get(family: Family, chiral?: boolean) {\n    return new Polyhedral({ family, chiral })\n  }\n}\n\ninterface CyclicData {\n  n: SymPolygon\n  chiral?: boolean\n}\n\nexport class Cyclic extends Symmetry {\n  private data: CyclicData\n  constructor(data: CyclicData) {\n    const { chiral, n } = data\n    super({\n      group: \"C\",\n      n,\n      achiralSub: \"v\",\n      chiral: !!chiral,\n      rotationalOrder: n,\n    })\n    this.data = data\n  }\n\n  name() {\n    const { n, chiral } = this.data\n    if (n === 1 && !chiral) return \"bilateral\"\n    if (n === 2 && !chiral) return \"biradial\"\n    const prefix = polygonPrefixes.get(n)\n    return chiral ? prefix : `${prefix} pyramidal`\n  }\n\n  static get(n: SymPolygon, chiral?: boolean) {\n    return new Cyclic({ n, chiral })\n  }\n\n  static bilateral = Cyclic.get(1)\n\n  static biradial = Cyclic.get(2)\n}\n\ninterface DihedralData {\n  n: SymPolygon\n  reflection?: \"prism\" | \"antiprism\"\n}\n\nexport class Dihedral extends Symmetry {\n  private data: DihedralData\n  constructor(data: DihedralData) {\n    const { reflection, n } = data\n    super({\n      group: \"D\",\n      n,\n      achiralSub: reflection === \"prism\" ? \"h\" : \"d\",\n      chiral: !reflection,\n      rotationalOrder: n * 2,\n    })\n    this.data = data\n  }\n\n  name() {\n    const { n, reflection } = this.data\n    const base = reflection ? `${reflection}atic` : \"dihedral\"\n    return `${polygonPrefixes.get(n)} ${base}`\n  }\n\n  static get(n: SymPolygon, reflection?: \"prism\" | \"antiprism\") {\n    return new Dihedral({ n, reflection })\n  }\n}\n","import { Symmetry, Polyhedral, Cyclic, Dihedral } from \"./symmetry\"\nimport type Specs from \"./PolyhedronSpecs\"\nimport type Composite from \"./Composite\"\nimport type Capstone from \"./Capstone\"\n\nconst elementaryMapping = {\n  sphenocorona: Cyclic.biradial,\n  \"augmented sphenocorona\": Cyclic.bilateral,\n  sphenomegacorona: Cyclic.biradial,\n  hebesphenomegacorona: Cyclic.biradial,\n  disphenocingulum: Dihedral.get(2, \"antiprism\"),\n  bilunabirotunda: Dihedral.get(2, \"prism\"),\n  \"triangular hebesphenorotunda\": Cyclic.get(3),\n}\n\nfunction getCapstoneSymmetry(capstone: Capstone) {\n  const { base } = capstone.data\n\n  // Prismatic symmetry is simple\n  if (capstone.isPrismatic()) {\n    return Dihedral.get(capstone.baseSides(), capstone.prismaticType())\n  }\n\n  if (capstone.isSnub()) {\n    return Dihedral.get(base, \"antiprism\")\n  }\n\n  // mono-capstones always have cyclic symmetry\n  if (capstone.isMono()) {\n    return Cyclic.get(base)\n  }\n  const isGyroelongated = capstone.isGyroelongated()\n\n  if (capstone.isPrimary()) {\n    return Dihedral.get(base, isGyroelongated ? \"antiprism\" : \"prism\")\n  }\n  // Cupolarotundae are always cyclic, and have reflective symmetry if it is not chiral\n  if (capstone.isCupolaRotunda()) {\n    return Cyclic.get(base, !!isGyroelongated)\n  }\n  // Bicupolae and birotundae\n  if (isGyroelongated) {\n    // Gyroelongated bicupolae and birotundae are chiral\n    return Dihedral.get(base)\n  }\n  return Dihedral.get(base, capstone.isGyro() ? \"antiprism\" : \"prism\")\n}\n\nfunction getCompositeSymmetry(composite: Composite) {\n  const { augmented, gyrate, diminished, source, align } = composite.data\n  const count = augmented + gyrate + diminished\n  // A composite is \"pure\" only if it has one type of modification\n  const pure = count === augmented || count === diminished || count === gyrate\n  switch (count) {\n    case 0:\n      return source.symmetry()\n\n    case 1:\n      // Mono-augmented prisms all have biradial symmetry,\n      // everything else has the symmetry of their base polygon\n      return source.isCapstone()\n        ? Cyclic.biradial\n        : Cyclic.get(source.data.family)\n\n    case 2: {\n      if (source.isCapstone()) {\n        // para-augmented prisms have digonal prismatic symmetry\n        // meta-augmented prisms have biradial symmetry\n        return align === \"para\" ? Dihedral.get(2, \"prism\") : Cyclic.biradial\n      }\n\n      const basePolygon = source.data.family\n      // Augmented cubes are always para- and thus have prismatic symmetry\n      if (basePolygon === 4) {\n        return Dihedral.get(4, \"prism\")\n      }\n\n      if (align === \"para\") {\n        return pure\n          ? Dihedral.get(basePolygon, \"antiprism\")\n          : Cyclic.get(basePolygon)\n      } else {\n        return pure ? Cyclic.biradial : Cyclic.bilateral\n      }\n    }\n\n    case 3:\n      // The only tri-augmented prisms are triangular and hexagonal\n      if (source.isCapstone()) {\n        return Dihedral.get(3, \"prism\")\n      }\n\n      // The only classical sources that can be tri-modified are\n      // diminished icosahedra and modified rhombicosidodecahedra\n      return pure ? Cyclic.get(3) : Cyclic.bilateral\n\n    case 4:\n      // The only way this would happen is an augmented tridiminished icosahedron\n      return Cyclic.get(3)\n  }\n\n  throw new Error(\"The polyhedron has way too many modifications\")\n}\n\nexport default function getSymmetry(solid: Specs): Symmetry {\n  if (solid.isClassical()) {\n    return Polyhedral.get(solid.data.family, solid.isSnub())\n  }\n  if (solid.isCapstone()) {\n    return getCapstoneSymmetry(solid)\n  }\n  if (solid.isComposite()) {\n    return getCompositeSymmetry(solid)\n  }\n  if (solid.isElementary()) {\n    return elementaryMapping[solid.data.base]\n  }\n  throw new Error(`Solid is of invalid type ${solid.type}`)\n}\n","import { compact } from \"lodash-es\"\nimport type Specs from \"./PolyhedronSpecs\"\nimport { PrimaryPolygon, polygonPrefixes } from \"./common\"\n\nconst countPrefixes: Record<number, string> = { 1: \"\", 2: \"bi\", 3: \"tri\" }\n\nexport function countString(count: number, base: string) {\n  if (count === 0) return \"\"\n  return `${countPrefixes[count]}${base}`\n}\n\nexport function wordJoin(...array: (string | undefined)[]) {\n  return compact(array).join(\" \")\n}\n\nexport function prefix(prefix: string = \"\", rest: string) {\n  return `${prefix}${rest}`\n}\n\nconst rectifiedNames = {\n  3: \"tetratetrahedron\",\n  4: \"cuboctahedron\",\n  5: \"icosidodecahedron\",\n}\n\nconst regularNames: Record<\n  PrimaryPolygon,\n  (facet?: \"face\" | \"vertex\") => string\n> = {\n  3: (facet) => (facet === \"face\" ? \"tetrahedron\" : \"tetrahedron dual\"),\n  4: (facet) => (facet === \"face\" ? \"cube\" : \"octahedron\"),\n  5: (facet) => (facet === \"face\" ? \"dodecahedron\" : \"icosahedron\"),\n}\n\nfunction getExpandedString(base: string, operation: string) {\n  const str = prefix(operation === \"cantellate\" ? \"rhombi\" : \"\", base)\n  return str.replace(\"ii\", \"i\")\n}\n\nexport default function getName(solid: Specs): string {\n  if (solid.isClassical()) {\n    const { operation, family, facet } = solid.data\n    const base = solid.hasFacet()\n      ? regularNames[family](facet)\n      : rectifiedNames[family]\n    return wordJoin(\n      operation === \"snub\" ? operation : \"\",\n      [\"truncate\", \"bevel\"].includes(operation) ? \"truncated\" : \"\",\n      getExpandedString(base, operation),\n    )\n  }\n\n  if (solid.isCapstone()) {\n    const { base, elongation, count, gyrate } = solid.data\n    // If no caps attached, it's a prism or antiprism\n    if (solid.isPrismatic()) {\n      return wordJoin(\n        polygonPrefixes.get(solid.baseSides()),\n        solid.prismaticType(),\n      )\n    }\n\n    if (solid.isSnub()) {\n      return wordJoin(\"snub\", polygonPrefixes.get(base), \"antiprism\")\n    }\n\n    const elongStr = {\n      prism: \"elongated\",\n      antiprism: \"gyroelongated\",\n      none: \"\",\n      snub: \"\",\n    }\n\n    const baseStr = solid.isCupolaRotunda()\n      ? \"cupolarotunda\"\n      : countString(count, solid.capType())\n\n    return wordJoin(\n      elongStr[elongation],\n      polygonPrefixes.get(base),\n      prefix(gyrate, baseStr),\n    )\n  }\n\n  if (solid.isComposite()) {\n    const { augmented, gyrate, diminished, align, source } = solid.data\n    return prefix(\n      align,\n      wordJoin(\n        countString(augmented, \"augmented\"),\n        countString(gyrate, \"gyrate\"),\n        countString(diminished, \"diminished\"),\n        source.name(),\n      ),\n    )\n  }\n\n  if (solid.isElementary()) {\n    return solid.data.base\n  }\n\n  throw new Error(`Invalid solid of type ${solid.type}`)\n}\n","import type Specs from \"./PolyhedronSpecs\"\nimport { getPolyhedraNames } from \"data/common\"\nconst johnsonSolids = getPolyhedraNames(\"johnson\")\n\nconst operationMapping = {\n  regular: \"\",\n  truncate: \"t\",\n  rectify: \"a\",\n  bevel: \"b\",\n  cantellate: \"e\",\n  snub: \"s\",\n}\n\nconst familyMapping = {\n  3: () => \"T\",\n  4: (facet: any) => (facet === \"vertex\" ? \"O\" : \"C\"),\n  5: (facet: any) => (facet === \"vertex\" ? \"I\" : \"D\"),\n}\n\nexport default function getConwaySymbol(structure: Specs) {\n  if (structure.isClassical()) {\n    const { family, facet, operation } = structure.data\n    return operationMapping[operation] + familyMapping[family](facet)\n  }\n\n  if (structure.isCapstone() && structure.isPrismatic()) {\n    return `${structure\n      .prismaticType()[0]\n      .toUpperCase()}${structure.baseSides()}`\n  }\n\n  const index = johnsonSolids.indexOf(structure.canonicalName())\n  return `J${index + 1}`\n}\n","import { isEqual, capitalize } from \"lodash-es\"\nimport type Classical from \"./Classical\"\nimport type Capstone from \"./Capstone\"\nimport type Composite from \"./Composite\"\nimport type Elementary from \"./Elementary\"\nimport getSymmetry from \"./getSymmetry\"\nimport getName from \"./getName\"\nimport getConwaySymbol from \"./getConwaySymbol\"\nimport type { Symmetry } from \"./symmetry\"\nimport { getAlternateNames, getCanonicalName } from \"data/alternates\"\n\ntype PolyhedronType =\n  | \"classical\"\n  | \"capstone\"\n  | \"composite\"\n  | \"modified antiprism\"\n  | \"elementary\"\n\nexport default abstract class PolyhedronSpecs<Data extends {} = {}> {\n  type: PolyhedronType\n  data: Data\n\n  constructor(type: PolyhedronType, data: Data) {\n    this.type = type\n    this.data = data\n  }\n\n  name(): string {\n    return getName(this)\n  }\n\n  canonicalName() {\n    return getCanonicalName(this.name())\n  }\n\n  alternateNames() {\n    return getAlternateNames(this.canonicalName())\n  }\n\n  symmetry(): Symmetry {\n    return getSymmetry(this)\n  }\n\n  conwaySymbol(): string {\n    return getConwaySymbol(this)\n  }\n\n  group() {\n    if (this.isClassical()) {\n      return this.isRegular() ? \"Platonic solid\" : \"Archimedean solid\"\n    }\n    if (this.isCapstone() && this.isPrismatic()) {\n      return capitalize(this.prismaticType())\n    }\n    return \"Johnson solid\"\n  }\n\n  isUniform() {\n    return this.isClassical() || (this.isCapstone() && this.isPrismatic())\n  }\n\n  isChiral() {\n    // Should be overwritten by things that are chiral\n    return false\n  }\n\n  equals(s2: PolyhedronSpecs) {\n    return this.type === s2.type && isEqual(this.data, s2.data)\n  }\n\n  isHoneycomb() {\n    return [\n      \"cube\",\n      \"truncated octahedron\",\n      \"triangular prism\",\n      \"hexagonal prism\",\n      \"gyrobifastigium\",\n    ].includes(this.canonicalName())\n  }\n\n  isClassical(): this is Classical {\n    return this.type === \"classical\"\n  }\n\n  isCapstone(): this is Capstone {\n    return this.type === \"capstone\"\n  }\n\n  isComposite(): this is Composite {\n    return this.type === \"composite\"\n  }\n\n  isElementary(): this is Elementary {\n    return this.type === \"elementary\"\n  }\n}\n","import { range } from \"lodash-es\"\nimport { Items } from \"types\"\nimport Specs from \"./PolyhedronSpecs\"\nimport Queries from \"./Queries\"\nimport {\n  Polygon,\n  PrimaryPolygon,\n  primaryPolygons,\n  PolygonType,\n  polygonTypes,\n  Twist,\n  twists,\n  oppositeTwist,\n} from \"./common\"\n\nexport const prismaticTypes = [\"prism\", \"antiprism\"] as const\nexport type PrismaticType = Items<typeof prismaticTypes>\n\nconst elongations = [\"none\", ...prismaticTypes, \"snub\"] as const\ntype Elongation = Items<typeof elongations>\n\nconst counts = [0, 1, 2] as const\ntype Count = Items<typeof counts>\n\nexport const gyrations = [\"ortho\", \"gyro\"] as const\nexport type Gyration = Items<typeof gyrations>\n\nexport const capTypes = [\"pyramid\", \"cupola\", \"rotunda\"] as const\nexport type CapType = Items<typeof capTypes>\n\ninterface CapstoneData {\n  base: 2 | PrimaryPolygon\n  type: PolygonType\n  elongation: Elongation\n  count: Count\n  rotundaCount: Count\n  gyrate?: Gyration\n  twist?: Twist\n}\n\n// Only pentagonal secondary has rotundae\nfunction rotundaCounts(\n  type: PolygonType,\n  base: PrimaryPolygon,\n  count: Count,\n): Count[] {\n  if (type === \"primary\" || base !== 5) return [0]\n  return range(0, count + 1) as Count[]\n}\n\n/**\n * A capstone polyhedron is a pyramid, cupola or rotunda that has been elongated\n * or doubled.\n */\nexport default class Capstone extends Specs<CapstoneData> {\n  private constructor(data: CapstoneData) {\n    super(\"capstone\", Capstone.cleanData(data))\n  }\n\n  withData(data: Partial<CapstoneData>) {\n    return Capstone.query.withData(\n      Capstone.cleanData({ ...this.data, ...data }),\n    )\n  }\n\n  withElongation(elongation: PrismaticType | \"none\", twist?: Twist) {\n    return this.withData({ elongation, twist })\n  }\n\n  isDigonal = () => this.data.base === 2\n  isTriangular = () => this.data.base === 3\n  isSquare = () => this.data.base === 4\n  isPentagonal = () => this.data.base === 5\n\n  isPrimary = () => this.data.type === \"primary\"\n  isSecondary = () => this.data.type === \"secondary\"\n\n  isPrismatic = () => this.data.count === 0 && !this.isSnub()\n  isMono = () => this.data.count === 1\n  isBi = () => this.data.count === 2\n\n  isShortened = () => this.data.elongation === \"none\"\n  isElongated = () => this.data.elongation === \"prism\"\n  isGyroelongated = () => this.data.elongation === \"antiprism\"\n  isSnub = () => this.data.elongation === \"snub\"\n\n  isGyro = () => this.data.gyrate === \"gyro\"\n  isOrtho = () => this.data.gyrate === \"ortho\"\n\n  // Overwrite from PolyhedronSpec\n  isChiral = () => Capstone.isChiral(this.data)\n\n  isPrism = () => this.isPrismatic() && this.isElongated()\n  isAntiprism = () => this.isPrismatic() && this.isGyroelongated()\n\n  isPyramid = () => this.isPrimary()\n  isCupola = () => this.isSecondary() && this.data.rotundaCount === 0\n  isRotunda = () => this.data.count === this.data.rotundaCount\n  isCupolaRotunda = () => this.isBi() && this.data.rotundaCount === 1\n\n  capType(): CapType {\n    if (this.isPyramid()) return \"pyramid\"\n    if (this.isCupola()) return \"cupola\"\n    if (this.isRotunda()) return \"rotunda\"\n    if (this.isCupolaRotunda())\n      throw new Error(`Cupolarotunda does not have a single cap type`)\n    throw new Error(`Prismatic solid does not have a cap`)\n  }\n\n  capTypes(): CapType[] {\n    if (this.isCupolaRotunda()) return [\"cupola\", \"rotunda\"]\n    return [this.capType()]\n  }\n\n  remove(capType: CapType) {\n    return this.withData({\n      count: (this.data.count - 1) as Count,\n      rotundaCount: (this.data.rotundaCount! -\n        (capType === \"rotunda\" ? 1 : 0)) as Count,\n    })\n  }\n\n  baseSides = () => (this.data.base * (this.isPrimary() ? 1 : 2)) as Polygon\n  prismaticType(): PrismaticType {\n    if (!this.isPrismatic()) {\n      throw new Error(`Tried to get prism type of non-prismatic`)\n    }\n    return this.data.elongation as PrismaticType\n  }\n\n  gyrate() {\n    if (this.isGyroelongated()) {\n      return this.withData({\n        twist: oppositeTwist(this.data.twist!),\n      })\n    }\n    return this.withData({\n      gyrate: this.data.gyrate === \"ortho\" ? \"gyro\" : \"ortho\",\n    })\n  }\n\n  hasGyrate = () => Capstone.hasGyrate(this.data)\n\n  /** Return true if this solid has a gyrate option */\n  static hasGyrate({ count, type, elongation }: CapstoneData) {\n    return count === 2 && type === \"secondary\" && elongation !== \"antiprism\"\n  }\n\n  static isChiral({ elongation, count, type }: CapstoneData) {\n    return elongation === \"antiprism\" && count === 2 && type === \"secondary\"\n  }\n\n  private static cleanData(data: CapstoneData) {\n    if (!this.hasGyrate(data)) {\n      delete data.gyrate\n    }\n    if (!this.isChiral(data)) {\n      delete data.twist\n    }\n    if (this.isChiral(data) && !data.twist) {\n      data.twist = \"left\"\n    }\n    if (data.base !== 5 || data.type === \"primary\") {\n      data.rotundaCount = 0\n    }\n    if (!data.rotundaCount) data.rotundaCount = 0\n    return data\n  }\n\n  static *getAll() {\n    for (const base of primaryPolygons) {\n      for (const type of polygonTypes) {\n        for (const elongation of elongations) {\n          // Skip `snub` in the main ordering\n          if (elongation === \"snub\") continue\n          for (const count of counts) {\n            // Gyroelongated pyramids are concave\n            if (\n              count > 0 &&\n              base === 3 &&\n              type === \"primary\" &&\n              elongation === \"antiprism\"\n            ) {\n              continue\n            }\n            // Prismatic stuff without elongation doesn't exist\n            if (count === 0 && elongation === \"none\") {\n              continue\n            }\n            for (const rotundaCount of rotundaCounts(type, base, count)) {\n              // Only cupolae, rotundae can be ortho or gyro\n              const data: CapstoneData = {\n                count,\n                type,\n                elongation,\n                base,\n                rotundaCount,\n              }\n              if (this.hasGyrate(data)) {\n                for (const gyrate of gyrations) {\n                  yield new Capstone({ ...data, gyrate })\n                }\n              } else if (this.isChiral(data)) {\n                for (const twist of twists) {\n                  yield new Capstone({ ...data, twist })\n                }\n              } else {\n                yield new Capstone({ ...data, rotundaCount })\n              }\n            }\n          }\n        }\n      }\n    }\n    // Digonal antiprism\n    yield new Capstone({\n      base: 2,\n      type: \"primary\",\n      elongation: \"antiprism\",\n      count: 0,\n      rotundaCount: 0,\n    })\n    // Fastigium\n    yield new Capstone({\n      base: 2,\n      type: \"secondary\",\n      elongation: \"none\",\n      count: 1,\n      rotundaCount: 0,\n    })\n    // Gyrobifastigium\n    yield new Capstone({\n      base: 2,\n      type: \"secondary\",\n      elongation: \"none\",\n      count: 2,\n      rotundaCount: 0,\n      gyrate: \"gyro\",\n    })\n\n    // Snub antiprisms\n    for (const base of [2, 3, 4] as const) {\n      yield new Capstone({\n        base,\n        type: \"primary\",\n        elongation: \"snub\",\n        count: 0,\n        rotundaCount: 0,\n      })\n    }\n  }\n\n  static query = new Queries(Capstone.getAll())\n}\n","import { pickBy, isMatch } from \"lodash-es\"\nimport { getSingle } from \"utils\"\nimport type Specs from \"./PolyhedronSpecs\"\n\ntype Predicate<T> = (arg: T) => boolean\n\n// TODO use a similar naming convention to react-testing-library:\n// https://testing-library.com/docs/dom-testing-library/api-queries\nexport default class Queries<S extends Specs> {\n  entries: S[]\n  nameMapping: Map<string, S>\n  canonicalNameMapping: Map<string, S[]>\n  constructor(entries: Iterable<S>) {\n    this.entries = [...entries]\n    this.canonicalNameMapping = new Map()\n    this.nameMapping = new Map()\n    for (const entry of this.entries) {\n      this.nameMapping.set(entry.name(), entry)\n\n      const canonicalName = entry.canonicalName()\n      if (!this.canonicalNameMapping.has(canonicalName)) {\n        this.canonicalNameMapping.set(canonicalName, [])\n      }\n      this.canonicalNameMapping.set(canonicalName, [\n        ...this.canonicalNameMapping.get(canonicalName)!,\n        entry,\n      ])\n    }\n  }\n\n  hasCanonicalName(name: string) {\n    return this.canonicalNameMapping.has(name)\n  }\n\n  /** Get the entry with the given canonical name. */\n  withCanonicalName(name: string) {\n    if (!this.canonicalNameMapping.has(name)) {\n      throw new Error(`Could not find entry with canonical name ${name}`)\n    }\n    return this.canonicalNameMapping.get(name)![0]\n  }\n\n  hasName(name: string) {\n    return this.nameMapping.has(name)\n  }\n\n  withName(name: string) {\n    const entry = this.nameMapping.get(name)\n    if (!entry) throw new Error(`Could not find specs with name ${name}`)\n    return entry\n  }\n\n  withData(data: S[\"data\"]) {\n    // Remove nullish elements from the filter\n    const compact = pickBy(data, (data) => data !== undefined)\n    return getSingle(this.entries.filter((item) => isMatch(item.data, compact)))\n  }\n\n  where(filter: Predicate<S>) {\n    return this.entries.filter((entry) => filter(entry))\n  }\n}\n","import { Items } from \"types\"\n\nimport Specs from \"./PolyhedronSpecs\"\nimport Queries from \"./Queries\"\nimport Classical from \"./Classical\"\nimport Capstone from \"./Capstone\"\n\nexport const counts = [0, 1, 2, 3] as const\nexport type Count = Items<typeof counts>\n\nexport const alignments = [\"para\", \"meta\"] as const\nexport type Align = Items<typeof alignments>\n\ninterface CompositeData {\n  source: Classical | Capstone\n  augmented: Count\n  diminished: Count\n  gyrate: Count\n  align?: Align\n}\n\ninterface CompositeDataArgs extends Partial<CompositeData> {\n  source: Classical | Capstone\n}\n\nconst prismaticBases = Capstone.query.where(\n  (s) => s.isPrism() && (s.isPrimary() || s.isTriangular()),\n)\nconst augmentedClassicalBases = Classical.query.where(\n  (s) => s.hasFacet() && !s.isVertex(),\n)\nconst icosahedron = Classical.query.withName(\"icosahedron\")\nconst rhombicosidodecahedron = Classical.query.withName(\n  \"rhombicosidodecahedron\",\n)\n\nfunction limitCount(limit: number) {\n  return counts.filter((n) => n <= limit)\n}\n\n/**\n * A composite Johnson solid consists of a Uniform polyhedron\n * with pyramids or cupolae added, removed, or gyrated from it.\n */\nexport default class Composite extends Specs<CompositeData> {\n  private constructor(data: CompositeDataArgs) {\n    super(\"composite\", Composite.cleanData(data))\n  }\n\n  withData(data: Partial<CompositeData>) {\n    return Composite.query.withData(\n      Composite.cleanData({ ...this.data, ...data }),\n    )\n  }\n\n  totalCount() {\n    const { augmented, diminished, gyrate } = this.data\n    return augmented + diminished + gyrate\n  }\n\n  isMono = () => this.totalCount() === 1\n  isBi = () => this.totalCount() === 2\n  isTri = () => this.totalCount() === 3\n\n  isAugmented = () => this.data.augmented > 0\n  isDiminished = () => this.data.diminished > 0\n  isGyrate = () => this.data.gyrate > 0\n\n  isAugmentedPrism() {\n    return this.data.source.isCapstone()\n  }\n\n  isAugmentedClassical() {\n    const { source } = this.data\n    if (!source.isClassical()) return false\n    if (source.isTruncated()) return true\n    return source.isRegular() && source.isFace()\n  }\n\n  isAugmentedSolid() {\n    return this.isAugmentedPrism() || this.isAugmentedClassical()\n  }\n\n  isDiminishedSolid() {\n    const { source } = this.data\n    return source.isClassical() && source.isRegular() && source.isVertex()\n  }\n\n  isGyrateSolid() {\n    const { source } = this.data\n    return source.isClassical() && source.isCantellated()\n  }\n\n  isPara = () => this.data.align === \"para\"\n  isMeta = () => this.data.align === \"meta\"\n\n  hasAlignment() {\n    return Composite.hasAlignment(this.data)\n  }\n\n  sourcePrism() {\n    const { source } = this.data\n    if (!source.isCapstone()) {\n      throw new Error(`Source is not a prism: ${source.name()}`)\n    }\n    return source\n  }\n\n  sourceClassical() {\n    const { source } = this.data\n    if (!source.isClassical()) {\n      throw new Error(`Source is not a classical solid: ${source.name()}`)\n    }\n    return source\n  }\n\n  diminish() {\n    if (!this.isAugmentedSolid())\n      throw new Error(`diminish() only implemented for augmented solids`)\n    return this.withData({\n      augmented: (this.data.augmented - 1) as Count,\n      align: \"meta\",\n    })\n  }\n\n  augmentDiminished(triangular?: boolean) {\n    if (!this.isDiminishedSolid())\n      throw new Error(\n        `augmentDiminished() only implemented for diminished solids`,\n      )\n    if (triangular) {\n      return this.withData({ augmented: 1 })\n    }\n    return this.withData({\n      diminished: (this.data.diminished - 1) as Count,\n      align: \"meta\",\n    })\n  }\n\n  augmentGyrate(gyrate: \"ortho\" | \"gyro\") {\n    if (!this.isGyrateSolid())\n      throw new Error(`augmentGyrate() only implemented for gyrate solids`)\n    if (gyrate === \"ortho\") {\n      return this.withData({\n        gyrate: (this.data.gyrate + 1) as Count,\n        diminished: (this.data.diminished - 1) as Count,\n      })\n    }\n    return this.withData({\n      diminished: (this.data.diminished - 1) as Count,\n      align: \"meta\",\n    })\n  }\n\n  ungyrate() {\n    return this.withData({\n      gyrate: (this.data.gyrate - 1) as Count,\n      align: \"meta\",\n    })\n  }\n\n  static hasAlignment({\n    source,\n    augmented = 0,\n    diminished = 0,\n    gyrate = 0,\n  }: CompositeDataArgs) {\n    const count = augmented + diminished + gyrate\n    if (count !== 2) return false\n    // Only hexagonal prism has alignment\n    if (source.isCapstone()) return source.isSecondary()\n    // Only dodecahedra and icosahedra have alignments\n    if (source.isClassical()) return source.isIcosahedral()\n    return false\n  }\n\n  private static cleanData(data: CompositeDataArgs): CompositeData {\n    if (!this.hasAlignment(data)) {\n      delete data.align\n    }\n    return { augmented: 0, diminished: 0, gyrate: 0, ...data }\n  }\n\n  static *getWithAlignments(data: CompositeDataArgs) {\n    if (this.hasAlignment(data)) {\n      for (const align of alignments) {\n        yield new Composite({ ...data, align })\n      }\n    } else {\n      yield new Composite(data)\n    }\n  }\n\n  static modifyLimit(source: Capstone | Classical) {\n    if (source.isCapstone()) return source.data.base % 3 === 0 ? 3 : 2\n    return source.data.family - 2\n  }\n\n  static *getAll() {\n    // Augmented solids\n    for (const source of [...prismaticBases, ...augmentedClassicalBases]) {\n      for (const augmented of limitCount(this.modifyLimit(source))) {\n        yield* this.getWithAlignments({ source, augmented })\n      }\n    }\n\n    // TODO add more diminished and gyrate polyhedra\n\n    // diminished icosahedra\n    for (const diminished of counts) {\n      yield* this.getWithAlignments({ source: icosahedron, diminished })\n    }\n    yield new Composite({ source: icosahedron, diminished: 3, augmented: 1 })\n\n    // rhombicosidodecahedra\n    for (const gyrate of counts) {\n      for (const diminished of limitCount(3 - gyrate)) {\n        yield* this.getWithAlignments({\n          source: rhombicosidodecahedron,\n          gyrate,\n          diminished,\n        })\n      }\n    }\n  }\n\n  static query = new Queries(Composite.getAll())\n}\n","import type { ValueIteratee } from \"lodash\"\nimport { uniqBy } from \"lodash-es\"\nimport { MathUtils } from \"three\"\n\nconst mod = MathUtils.euclideanModulo\n\n/**\n * Get the element of the array at the given index, modulo its length\n */\nexport function getCyclic<T>(array: T[], index: number): T {\n  return array[mod(index, array.length)]\n}\n\n/**\n * Repeat a value n times\n */\nexport function repeat<T>(value: T, n: number) {\n  return Array<T>(n).fill(value)\n}\n\n/**\n * Create an object from the array using the iteratee\n */\nexport function mapObject<T, U>(\n  arr: T[],\n  iteratee: (item: T, i: number) => [string | number, U],\n): { [key: string]: U } {\n  return Object.fromEntries(arr.map(iteratee))\n}\n\nexport function flatMapUniq<T, U>(\n  arr: T[],\n  iteratee1: (key: T) => U[],\n  iteratee2: ValueIteratee<U>,\n) {\n  return uniqBy(arr.flatMap(iteratee1), iteratee2)\n}\n\n/**\n * Wrapper over `find` that throws an error if no elements match the predicate.\n */\nexport function find<T>(iter: Iterable<T>, predicate: (item: T) => boolean) {\n  for (const item of iter) {\n    if (predicate(item)) return item\n  }\n  throw new Error(`Could not find item in ${iter} matching ${predicate}`)\n}\n\n/**\n * Get the single element from the given array.\n */\nexport function getSingle<T>(array: T[]): T {\n  if (array.length !== 1) {\n    throw new Error(\n      `Expected array to have one element: ${JSON.stringify(array)}`,\n    )\n  }\n  return array[0]\n}\n\nexport function choose<T>(choices: T[]): T {\n  const index = Math.floor(Math.random() * choices.length)\n  return choices[index]\n}\n\n/**\n * Split the list in two at index (exclusive)\n */\nexport function splitAt<T>(list: T[], index: number) {\n  return [list.slice(0, index), list.slice(index)]\n}\n\n/**\n * Return the list \"pivoted\" so that the given value starts first\n */\nexport function pivot<T>(list: T[], value: T) {\n  const index = list.indexOf(value)\n  const [front, back] = splitAt(list, index)\n  return [...back, ...front]\n}\n\nexport const escape = (str: string) => str.replace(/ /g, \"-\")\n\nexport type EntryIters<T> = { [K in keyof T]: Iterable<T[K]> }\nexport function* cartesian<T>(itemLists: EntryIters<T>): Generator<T> {\n  const keys = Object.keys(itemLists)\n  if (keys.length === 0) return\n  const key = keys[0]\n  const { [key]: items, ...remainingLists } = itemLists as Record<string, any>\n  for (const item of items) {\n    for (const rest of cartesian(remainingLists)) {\n      yield { [key]: item, ...rest } as T\n    }\n  }\n}\n","import React from \"react\"\nimport { useStyle } from \"styles\"\nimport { ChildrenProp } from \"types\"\n\nexport default function SrOnly({ children }: ChildrenProp) {\n  const css = useStyle({\n    height: 1,\n    width: 1,\n    position: \"absolute\",\n    overflow: \"hidden\",\n    clip: \"rect(1px, 1px, 1px, 1px)\",\n  })\n  return <span {...css()}>{children}</span>\n}\n","import React, { AnchorHTMLAttributes } from \"react\"\n\nexport default function ExternalLink({\n  href,\n  children,\n  ...props\n}: AnchorHTMLAttributes<HTMLAnchorElement>) {\n  return (\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href={href} {...props}>\n      {children}\n    </a>\n  )\n}\n","import { useEffect } from \"react\"\n\nexport default function usePageTitle(title: string) {\n  // \"This is broken because it doesn't have a cleanup function,\n  // so the page title is stuck... but it's going to be annoying\n  // to make it work.\" -- Dan Abramov\n  useEffect(() => {\n    document.title = title\n  }, [title])\n}\n","import React, { useMemo, useReducer, useContext } from \"react\"\nimport { isFunction, mapValues } from \"lodash-es\"\n\ntype Args = any[]\ntype Action<S> = (state: S) => S\ntype ActionCreator<S> = (...args: Args) => Action<S>\ntype ActionCreators<S, A extends string> = Record<A, ActionCreator<S>>\n\ntype Dispatch = (...args: Args) => void\ntype Actions<A extends string> = Record<A, Dispatch>\n\ntype PropType = { [prop: string]: any }\n\n/**\n * Given a set of state actions, generate a context provider and useful hooks\n * to access its state and actions.\n *\n * @returns an object with keys `Provider`, `useState`, `useActions`.\n */\nexport default function createHookedContext<S, A extends string>(\n  actions: ActionCreators<S, A>,\n  defaultStateCreator: S | ((props?: PropType) => S),\n) {\n  const defaultState = isFunction(defaultStateCreator)\n    ? defaultStateCreator()\n    : defaultStateCreator\n  const StateContext = React.createContext<S>(defaultState)\n\n  const ActionContext = React.createContext<Actions<A>>({} as Actions<A>)\n\n  return {\n    Provider({ children, ...props }: PropType) {\n      const defaultState = isFunction(defaultStateCreator)\n        ? defaultStateCreator(props)\n        : defaultStateCreator\n      const [state, dispatch] = useReducer(\n        (state: S, action: Action<S>) => action(state),\n        defaultState,\n      )\n\n      const actionsValue = useMemo(() => {\n        return mapValues(\n          actions,\n          (action: ActionCreator<S>) => (...args: Args) =>\n            dispatch(action(...args)),\n        )\n      }, []) as Actions<A>\n\n      return (\n        <StateContext.Provider value={state}>\n          <ActionContext.Provider value={actionsValue}>\n            {children}\n          </ActionContext.Provider>\n        </StateContext.Provider>\n      )\n    },\n    useState() {\n      return useContext(StateContext)\n    },\n    useActions() {\n      return useContext(ActionContext)\n    },\n  }\n}\n","import React, { ReactType, ReactChild, FunctionComponent } from \"react\"\nimport { reduceRight } from \"lodash-es\"\n\nfunction wrapProvider(Provider: ReactType, children: ReactChild) {\n  return <Provider>{children}</Provider>\n}\n\nexport default function wrapProviders(\n  providers: ReactType[],\n): FunctionComponent {\n  return ({ children }: any) =>\n    reduceRight(\n      providers,\n      (wrapped, provider) => wrapProvider(provider, wrapped),\n      children,\n    )\n}\n","import { escape } from \"utils\"\nexport const getPolyhedraNames = (groupName: string): string[] =>\n  require(`./names/${groupName}.json`)\n\nconst groups = [\"platonic\", \"archimedean\", \"prisms\", \"antiprisms\", \"johnson\"]\nexport const allSolidNames = groups.flatMap(getPolyhedraNames)\n\nexport function isValidSolid(solidName: string) {\n  return allSolidNames.includes(solidName)\n}\n\nexport function assertValidSolid(solidName: string) {\n  if (!isValidSolid(solidName)) {\n    throw new Error(`Invalid polyhedron name: ${solidName}`)\n  }\n  return solidName\n}\n\nexport function getSolidData(solidName: string) {\n  // We can't inline this because it messes up Webpack\n  const escapedName = escape(assertValidSolid(solidName))\n  return require(`data/polyhedra/${escapedName}.json`)\n}\n","import { Items } from \"types\"\nimport Specs from \"./PolyhedronSpecs\"\nimport Queries from \"./Queries\"\n\nexport const bases = [\n  \"sphenocorona\",\n  \"augmented sphenocorona\",\n  \"sphenomegacorona\",\n  \"hebesphenomegacorona\",\n  \"disphenocingulum\",\n  \"bilunabirotunda\",\n  \"triangular hebesphenorotunda\",\n] as const\n\ntype ElementaryBase = Items<typeof bases>\n\ninterface ElementaryData {\n  base: ElementaryBase\n}\n\nexport default class Elementary extends Specs<ElementaryData> {\n  constructor(data: ElementaryData) {\n    super(\"elementary\", data)\n  }\n\n  static *getAll() {\n    for (const base of bases) {\n      yield new Elementary({ base })\n    }\n  }\n\n  static query = new Queries(Elementary.getAll())\n}\n","import Classical from \"./Classical\"\nimport Capstone from \"./Capstone\"\nimport Composite from \"./Composite\"\nimport Elementary from \"./Elementary\"\n\nconst subclasses = [Classical, Capstone, Composite, Elementary]\n\nexport function getCanonicalSpecs(name: string) {\n  for (const Subclass of subclasses) {\n    if (Subclass.query.hasCanonicalName(name)) {\n      return Subclass.query.withCanonicalName(name)\n    }\n  }\n  throw new Error(`Could not find structure with canonical name ${name}`)\n}\n\nexport function getSpecs(name: string) {\n  for (const Subclass of subclasses) {\n    if (Subclass.query.hasName(name)) {\n      // TODO this might cause unanticipated errors for chiral polyhedra\n      return Subclass.query.withName(name)\n    }\n  }\n  throw new Error(`Could not find structure with name ${name}`)\n}\n","import { startCase, set } from \"lodash-es\"\nimport { polygons, polygonNames } from \"specs\"\n\n// Colors from d3-scale-chromatic:\n// https://github.com/d3/d3-scale-chromatic#schemeCategory10\nconst defaultColors = {\n  3: \"#ff7f00\",\n  4: \"#e41a1c\",\n  5: \"#377eb8\",\n  6: \"#4daf4a\",\n  8: \"#a65628\",\n  10: \"#984ea3\",\n}\n\ninterface BaseConfigInput<T = any> {\n  key: string\n  type: string\n  default: T\n  options?: number[]\n  display?: string\n}\n\nexport interface ConfigInput<T = any> extends BaseConfigInput<T> {\n  display: string\n}\n\nconst colorOptionsList = polygons.map((n) => {\n  return {\n    key: `colors[${n}]`,\n    display: `${startCase(polygonNames.get(n))} Color`,\n    type: \"color\",\n    default: defaultColors[n],\n  }\n})\n\nexport const configInputs: ConfigInput[] = [\n  {\n    key: \"showEdges\",\n    type: \"checkbox\",\n    default: true,\n  },\n  {\n    key: \"showFaces\",\n    type: \"checkbox\",\n    default: true,\n  },\n  {\n    key: \"showInnerFaces\",\n    type: \"checkbox\",\n    default: true,\n  },\n  {\n    key: \"enableFormeColors\",\n    type: \"checkbox\",\n    default: false,\n  },\n  {\n    key: \"opacity\",\n    type: \"range\",\n    default: 1.0,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  {\n    key: \"enableAnimation\",\n    type: \"checkbox\",\n    default: true,\n  },\n  {\n    key: \"animationSpeed\",\n    type: \"select\",\n    options: [0.25, 0.5, 0.75, 1, 1.25, 1.5, 2],\n    default: 1,\n  },\n  ...colorOptionsList,\n].map((input: BaseConfigInput) => ({\n  ...input,\n  display: input?.display ?? startCase(input.key),\n}))\n\nexport const defaultConfig: Record<string, any> = configInputs.reduce(\n  (obj, option) => set(obj, option.key, option.default),\n  {},\n)\n","/**\n * A Map that supports bidirectional key/value access.\n */\nexport class BiMap<K, V> {\n  #obj: Map<K, V>\n  #inv: Map<V, K>\n\n  constructor(entries: Iterable<readonly [K, V]>) {\n    const _entries = [...entries]\n    this.#obj = new Map(_entries)\n    this.#inv = new Map(_entries.map(([k, v]) => [v, k]))\n  }\n\n  /**\n   * Get the value corresponding to the key\n   */\n  get(key: K): V {\n    return this.#obj.get(key)!\n  }\n\n  /**\n   * Get the key corresponding to the value\n   */\n  of(val: V): K {\n    return this.#inv.get(val)!\n  }\n\n  /**\n   * Return whether the bimap contains the given key\n   */\n  hasKey(key: any): key is K {\n    return this.#obj.has(key)\n  }\n\n  /**\n   * Return whether the bimap contains the given value\n   */\n  hasValue(val: any): val is V {\n    return this.#inv.has(val)\n  }\n\n  /**\n   * Get the list of all keys in the bimap\n   */\n  keys(): Iterable<K> {\n    return this.#obj.keys()\n  }\n\n  /**\n   * Get the list of all values in the bimap\n   */\n  values(): Iterable<V> {\n    return this.#obj.values()\n  }\n}\n","import { assertValidSolid } from \"./common\"\n\nexport const alternateNamesMapping: Record<string, string[]> = {\n  tetrahedron: [\n    \"tetrahedron dual\",\n    \"triangular pyramid\",\n    \"digonal antiprism\",\n    \"disphenoid\",\n  ],\n  \"truncated tetrahedron\": [\"truncated tetrahedron dual\"],\n  cube: [\"square prism\"],\n  octahedron: [\"tetratetrahedron\", \"triangular antiprism\", \"square bipyramid\"],\n  icosahedron: [\n    \"snub tetratetrahedron\",\n    \"gyroelongated pentagonal bipyramid\",\n    \"snub triangular antiprism\",\n  ],\n  cuboctahedron: [\"rhombitetratetrahedron\", \"triangular gyrobicupola\"],\n  \"truncated octahedron\": [\"truncated tetratetrahedron\"],\n  rhombicuboctahedron: [\"elongated square orthobicupola\"],\n  icosidodecahedron: [\"pentagonal gyrobirotunda\"],\n\n  // fastigium\n  \"triangular prism\": [\"fastigium\", \"digonal cupola\"],\n  gyrobifastigium: [\"digonal gyrobicupola\"],\n\n  // Augmented solids\n  \"triangular bipyramid\": [\"augmented tetrahedron\"],\n  \"elongated square pyramid\": [\"augmented cube\", \"augmented square prism\"],\n  \"elongated square bipyramid\": [\n    \"biaugmented cube\",\n    \"biaugmented square prism\",\n  ],\n  // Diminished solids\n  \"square pyramid\": [\"diminished octahedron\"],\n  \"pentagonal antiprism\": [\"parabidiminished icosahedron\"],\n  \"gyroelongated pentagonal pyramid\": [\"diminished icosahedron\"],\n\n  // Gyrate solids\n  \"elongated square gyrobicupola\": [\"gyrate rhombicuboctahedron\"],\n  \"elongated square cupola\": [\"diminished rhombicuboctahedron\"],\n  \"octagonal prism\": [\"bidiminished rhombicuboctahedron\"],\n\n  // Snub antiprisms\n  \"snub disphenoid\": [\"snub digonal antiprism\"],\n}\nfunction* getCanonicalMapping() {\n  for (const [canonical, alts] of Object.entries(alternateNamesMapping)) {\n    for (const alt of alts) {\n      yield [alt, canonical]\n    }\n  }\n}\n\nconst canonicalMapping = Object.fromEntries(getCanonicalMapping())\nconst alternateNames = Object.keys(canonicalMapping)\n\nexport function getCanonicalName(name: string) {\n  const canonical = canonicalMapping[name]\n  if (canonical) return canonical\n  return assertValidSolid(name)\n}\n\nexport function getAlternateNames(name: string) {\n  return alternateNamesMapping[name] ?? []\n}\n\nexport function isAlternateName(name: string) {\n  return alternateNames.includes(name)\n}\n","export const times = [\"Times New Roman\", \"Times\", \"serif\"]\n\nexport const andaleMono = [\"Andale Mono\", \"AndaleMono\", \"monospace\"]\n\nexport const verdana = [\"Verdana\", \"Geneva\", \"sans-serif\"]\n","import { set, cloneDeep } from \"lodash-es\"\nimport { createHookedContext } from \"components/common\"\nimport { defaultConfig } from \"./configOptions\"\n\ntype Actions = \"setValue\" | \"reset\"\nexport default createHookedContext<typeof defaultConfig, Actions>(\n  {\n    setValue: <T>(key: string, value: T) => (state) =>\n      set(cloneDeep(state), key, value),\n    reset: () => () => defaultConfig,\n  },\n  defaultConfig,\n)\n","import React, { useState, useEffect, useContext } from \"react\"\nimport { media } from \"styles\"\nimport { ChildrenProp } from \"types\"\n\nfunction getWindowWidth() {\n  return window.innerWidth > 0 ? window.innerWidth : window.screen.width\n}\n\n// The reason we use context is so that we only need to bind one listener to the window\nconst DeviceContext = React.createContext(media.desktopMinWidth)\n\nexport function DeviceProvider({ children }: ChildrenProp) {\n  const [width, setWidth] = useState(getWindowWidth())\n\n  useEffect(() => {\n    const handleResize = () => setWidth(getWindowWidth())\n    window.addEventListener(\"resize\", handleResize)\n    return () => {\n      window.removeEventListener(\"resize\", handleResize)\n    }\n  }, [])\n\n  return (\n    <DeviceContext.Provider value={width}>{children}</DeviceContext.Provider>\n  )\n}\n\nfunction isMobile(width: number) {\n  return width <= media.mobileMaxWidth\n}\n\nfunction getOrientation(width: number) {\n  return width <= media.mobilePortraitMaxWidth ? \"portrait\" : \"landscape\"\n}\n\nexport default function useMediaInfo() {\n  const width = useContext(DeviceContext)\n  if (isMobile(width)) {\n    return { device: \"mobile\", orientation: getOrientation(width) }\n  }\n  return { device: \"desktop\", orientation: null }\n}\n","var map = {\n\t\"./antiprisms.json\": 149,\n\t\"./archimedean.json\": 150,\n\t\"./johnson.json\": 151,\n\t\"./platonic.json\": 152,\n\t\"./prisms.json\": 153\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 148;","var map = {\n\t\"./augmented-dodecahedron.json\": 155,\n\t\"./augmented-hexagonal-prism.json\": 156,\n\t\"./augmented-pentagonal-prism.json\": 157,\n\t\"./augmented-sphenocorona.json\": 158,\n\t\"./augmented-triangular-prism.json\": 159,\n\t\"./augmented-tridiminished-icosahedron.json\": 160,\n\t\"./augmented-truncated-cube.json\": 161,\n\t\"./augmented-truncated-dodecahedron.json\": 162,\n\t\"./augmented-truncated-tetrahedron.json\": 163,\n\t\"./biaugmented-pentagonal-prism.json\": 164,\n\t\"./biaugmented-triangular-prism.json\": 165,\n\t\"./biaugmented-truncated-cube.json\": 166,\n\t\"./bigyrate-diminished-rhombicosidodecahedron.json\": 167,\n\t\"./bilunabirotunda.json\": 168,\n\t\"./cube.json\": 169,\n\t\"./cuboctahedron.json\": 170,\n\t\"./decagonal-antiprism.json\": 171,\n\t\"./decagonal-prism.json\": 172,\n\t\"./diminished-rhombicosidodecahedron.json\": 173,\n\t\"./disphenocingulum.json\": 174,\n\t\"./dodecahedron.json\": 175,\n\t\"./elongated-pentagonal-bipyramid.json\": 176,\n\t\"./elongated-pentagonal-cupola.json\": 177,\n\t\"./elongated-pentagonal-gyrobicupola.json\": 178,\n\t\"./elongated-pentagonal-gyrobirotunda.json\": 179,\n\t\"./elongated-pentagonal-gyrocupolarotunda.json\": 180,\n\t\"./elongated-pentagonal-orthobicupola.json\": 181,\n\t\"./elongated-pentagonal-orthobirotunda.json\": 182,\n\t\"./elongated-pentagonal-orthocupolarotunda.json\": 183,\n\t\"./elongated-pentagonal-pyramid.json\": 184,\n\t\"./elongated-pentagonal-rotunda.json\": 185,\n\t\"./elongated-square-bipyramid.json\": 186,\n\t\"./elongated-square-cupola.json\": 187,\n\t\"./elongated-square-gyrobicupola.json\": 188,\n\t\"./elongated-square-pyramid.json\": 189,\n\t\"./elongated-triangular-bipyramid.json\": 190,\n\t\"./elongated-triangular-cupola.json\": 191,\n\t\"./elongated-triangular-gyrobicupola.json\": 192,\n\t\"./elongated-triangular-orthobicupola.json\": 193,\n\t\"./elongated-triangular-pyramid.json\": 194,\n\t\"./gyrate-bidiminished-rhombicosidodecahedron.json\": 195,\n\t\"./gyrate-rhombicosidodecahedron.json\": 196,\n\t\"./gyrobifastigium.json\": 197,\n\t\"./gyroelongated-pentagonal-bicupola.json\": 198,\n\t\"./gyroelongated-pentagonal-birotunda.json\": 199,\n\t\"./gyroelongated-pentagonal-cupola.json\": 200,\n\t\"./gyroelongated-pentagonal-cupolarotunda.json\": 201,\n\t\"./gyroelongated-pentagonal-pyramid.json\": 202,\n\t\"./gyroelongated-pentagonal-rotunda.json\": 203,\n\t\"./gyroelongated-square-bicupola.json\": 204,\n\t\"./gyroelongated-square-bipyramid.json\": 205,\n\t\"./gyroelongated-square-cupola.json\": 206,\n\t\"./gyroelongated-square-pyramid.json\": 207,\n\t\"./gyroelongated-triangular-bicupola.json\": 208,\n\t\"./gyroelongated-triangular-cupola.json\": 209,\n\t\"./hebesphenomegacorona.json\": 210,\n\t\"./hexagonal-antiprism.json\": 211,\n\t\"./hexagonal-prism.json\": 212,\n\t\"./icosahedron.json\": 213,\n\t\"./icosidodecahedron.json\": 214,\n\t\"./metabiaugmented-dodecahedron.json\": 215,\n\t\"./metabiaugmented-hexagonal-prism.json\": 216,\n\t\"./metabiaugmented-truncated-dodecahedron.json\": 217,\n\t\"./metabidiminished-icosahedron.json\": 218,\n\t\"./metabidiminished-rhombicosidodecahedron.json\": 219,\n\t\"./metabigyrate-rhombicosidodecahedron.json\": 220,\n\t\"./metagyrate-diminished-rhombicosidodecahedron.json\": 221,\n\t\"./octagonal-antiprism.json\": 222,\n\t\"./octagonal-prism.json\": 223,\n\t\"./octahedron.json\": 224,\n\t\"./parabiaugmented-dodecahedron.json\": 225,\n\t\"./parabiaugmented-hexagonal-prism.json\": 226,\n\t\"./parabiaugmented-truncated-dodecahedron.json\": 227,\n\t\"./parabidiminished-rhombicosidodecahedron.json\": 228,\n\t\"./parabigyrate-rhombicosidodecahedron.json\": 229,\n\t\"./paragyrate-diminished-rhombicosidodecahedron.json\": 230,\n\t\"./pentagonal-antiprism.json\": 231,\n\t\"./pentagonal-bipyramid.json\": 232,\n\t\"./pentagonal-cupola.json\": 233,\n\t\"./pentagonal-gyrobicupola.json\": 234,\n\t\"./pentagonal-gyrocupolarotunda.json\": 235,\n\t\"./pentagonal-orthobicupola.json\": 236,\n\t\"./pentagonal-orthobirotunda.json\": 237,\n\t\"./pentagonal-orthocupolarotunda.json\": 238,\n\t\"./pentagonal-prism.json\": 239,\n\t\"./pentagonal-pyramid.json\": 240,\n\t\"./pentagonal-rotunda.json\": 241,\n\t\"./rhombicosidodecahedron.json\": 242,\n\t\"./rhombicuboctahedron.json\": 243,\n\t\"./snub-cuboctahedron.json\": 244,\n\t\"./snub-disphenoid.json\": 245,\n\t\"./snub-icosidodecahedron.json\": 246,\n\t\"./snub-square-antiprism.json\": 247,\n\t\"./sphenocorona.json\": 248,\n\t\"./sphenomegacorona.json\": 249,\n\t\"./square-antiprism.json\": 250,\n\t\"./square-cupola.json\": 251,\n\t\"./square-gyrobicupola.json\": 252,\n\t\"./square-orthobicupola.json\": 253,\n\t\"./square-pyramid.json\": 254,\n\t\"./tetrahedron.json\": 255,\n\t\"./triangular-bipyramid.json\": 256,\n\t\"./triangular-cupola.json\": 257,\n\t\"./triangular-hebesphenorotunda.json\": 258,\n\t\"./triangular-orthobicupola.json\": 259,\n\t\"./triangular-prism.json\": 260,\n\t\"./triaugmented-dodecahedron.json\": 261,\n\t\"./triaugmented-hexagonal-prism.json\": 262,\n\t\"./triaugmented-triangular-prism.json\": 263,\n\t\"./triaugmented-truncated-dodecahedron.json\": 264,\n\t\"./tridiminished-icosahedron.json\": 265,\n\t\"./tridiminished-rhombicosidodecahedron.json\": 266,\n\t\"./trigyrate-rhombicosidodecahedron.json\": 267,\n\t\"./truncated-cube.json\": 268,\n\t\"./truncated-cuboctahedron.json\": 269,\n\t\"./truncated-dodecahedron.json\": 270,\n\t\"./truncated-icosahedron.json\": 271,\n\t\"./truncated-icosidodecahedron.json\": 272,\n\t\"./truncated-octahedron.json\": 273,\n\t\"./truncated-tetrahedron.json\": 274\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 154;","// This file is generated by Create React App.\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from \"react\"\n\nimport { useStyle, fonts, scales } from \"styles\"\n\nimport Icon from \"@mdi/react\"\nimport { mdiHexagonOutline } from \"@mdi/js\"\n\nexport default function Loading() {\n  const css = useStyle({\n    width: \"100vw\",\n    height: \"100vh\",\n\n    display: \"grid\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    alignItems: \"center\",\n    gridAutoFlow: \"column\",\n    gridGap: scales.spacing[3],\n  })\n\n  const text = useStyle({\n    fontFamily: fonts.andaleMono,\n    fontSize: scales.font[3],\n  })\n\n  return (\n    <div {...css()}>\n      <Icon size={scales.size[2]} path={mdiHexagonOutline} spin />\n      <div {...text()}>Loading...</div>\n    </div>\n  )\n}\n","import React, { Suspense } from \"react\"\nimport { Route, Routes } from \"react-router-dom\"\n\nimport usePageTracker from \"./usePageTracker\"\nimport Loading from \"./Loading\"\n\nconst HomePage = React.lazy(() => import(\"./HomePage\"))\nconst ViewerPage = React.lazy(() => import(\"./ViewerPage\"))\n\nexport default function App() {\n  usePageTracker()\n  return (\n    <Suspense fallback={<Loading />}>\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\":solid/*\" element={<ViewerPage />} />\n      </Routes>\n    </Suspense>\n  )\n}\n","import { useEffect } from \"react\"\nimport { useLocation } from \"react-router-dom\"\nimport ReactGA from \"react-ga\"\n\n// TODO figure out how to make this just a regular hook\nexport default function usePageTracker() {\n  const { pathname, search } = useLocation()\n  useEffect(() => {\n    ReactGA.pageview(pathname + search)\n  }, [pathname, search])\n}\n","import React from \"react\"\nimport { BrowserRouter } from \"react-router-dom\"\n\nimport { wrapProviders } from \"components/common\"\nimport { DeviceProvider } from \"./useMediaInfo\"\nimport ConfigCtx from \"./ConfigCtx\"\n\nimport App from \"./App\"\nconst Providers = wrapProviders([\n  BrowserRouter,\n  DeviceProvider,\n  ConfigCtx.Provider,\n])\n\nexport default function Root() {\n  return (\n    <Providers>\n      <App />\n    </Providers>\n  )\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport ReactGA from \"react-ga\"\n\nimport * as serviceWorker from \"./registerServiceWorker\"\nimport Root from \"./components/Root\"\n\nimport \"what-input\"\n\nimport \"styles/reset.css\"\nimport \"styles/box-sizing.css\"\nimport \"styles/a11y.css\"\n\nconst trackingId =\n  process.env.NODE_ENV === \"production\" ? \"UA-122991684-1\" : \"UA-122991684-2\"\nReactGA.initialize(trackingId)\n\nconst root = document.getElementById(\"root\")\nif (root) {\n  ReactDOM.render(<Root />, root)\n}\nserviceWorker.register()\n"],"sourceRoot":""}